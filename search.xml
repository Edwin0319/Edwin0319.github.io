<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Interval dynamic programming</title>
    <url>/2024/01/28/2024-1-28-interval-dynamic-programming/</url>
    <content><![CDATA[<h1 id="Tutorial-on-the-use-of-interval-dynamic-programming"><a href="#Tutorial-on-the-use-of-interval-dynamic-programming" class="headerlink" title="Tutorial on the use of interval dynamic programming"></a>Tutorial on the use of interval dynamic programming</h1><span id="more"></span>

<p>The important thinking is that:</p>
<ol>
<li>From short interval to long interval.</li>
<li>i and j are incremental.</li>
<li>Determine the state transfer equation.</li>
</ol>
<h3 id="This-is-a-example-of-interval-DP"><a href="#This-is-a-example-of-interval-DP" class="headerlink" title="This is a example of interval DP"></a><a href="https://oj.haizeix.com/problem/46">This is a example of interval DP</a></h3><blockquote>
<p>Cut string of palindrome</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_N 1000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[MAX_N + <span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> dp[MAX_N +<span class="number">5</span>][MAX_N + <span class="number">5</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s + <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> n = <span class="built_in">strlen</span>(s + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> l = <span class="number">1</span>; l &lt;= n; l++)&#123; <span class="comment">// There is a length of l.</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n - l + <span class="number">1</span>; i++)&#123; <span class="comment">// i is the beginning of the substring</span></span><br><span class="line">            <span class="type">int</span> j = i + l - <span class="number">1</span>; <span class="comment">// j is the ending of the substring</span></span><br><span class="line">            <span class="keyword">if</span>(s[i] == s[j] &amp;&amp; dp[i + <span class="number">1</span>][j - <span class="number">1</span>] == <span class="number">0</span>) dp[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                dp[i][j] = l;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k = i; k &lt; j; k++)&#123; <span class="comment">// k is between i and j, and i, j state are also confirm.</span></span><br><span class="line">                    dp[i][j] = <span class="built_in">min</span>(dp[i][j], dp[i][k] + dp[k + <span class="number">1</span>][j] + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dp[<span class="number">1</span>][n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>algorithm</tag>
        <tag>dynamic programming</tag>
        <tag>helping</tag>
      </tags>
  </entry>
  <entry>
    <title>The difference in c++ between priority_queue and set</title>
    <url>/2024/02/08/2024-2-8-The-difference-in-c++-between-priority_queue-and-set/</url>
    <content><![CDATA[<h1 id="Teach-you-how-to-use"><a href="#Teach-you-how-to-use" class="headerlink" title="Teach you how to use"></a>Teach you how to use</h1><span id="more"></span>

<p>The underlying structure of the priority_queue is the <strong>heap</strong>, and that of the set is <strong>Red-black tree</strong>.</p>
<p>The priority_queue insertion time complexity <strong>worst</strong> <code>O(log(n))</code>, the average time complexity is constant. Take the minimum or maximum value <code>O(1)</code>. Pop <code>O(log(n))</code>. Build time <code>O(n)</code>.</p>
<p>The set insertion time complexity <code>O(log(n))</code>, but always over or equal the priority_queue   worst time. Take the minimum or maximum value <code>O(1)</code>. Pop <strong>worst</strong> <code>O(n)</code>. Build time <code>O(nlog(n))</code>.</p>
<h3 id="Priority-queue"><a href="#Priority-queue" class="headerlink" title="Priority_queue"></a>Priority_queue</h3><blockquote>
<p>Part of it is orderly<br>Take up less space<br>Supported operations are few, and application scenarios are limited</p>
</blockquote>
<h3 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h3><blockquote>
<p>Completely orderly<br>Take up a lot of space<br>Supported more operations, and more application scenarios</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">	<span class="type">int</span> a;</span><br><span class="line">	<span class="built_in">node</span>(<span class="type">int</span> t)&#123;<span class="keyword">this</span>-&gt;a = t;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> node a, <span class="type">const</span> node b)&#123;<span class="keyword">return</span> a.a &gt; b.a;&#125; <span class="comment">//priority_queue False優先排, 其他結構 True優先排</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	priority_queue&lt;node&gt; p;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>, a; i &lt; n; i++)&#123;</span><br><span class="line">		cin &gt;&gt; a;</span><br><span class="line">		p.<span class="built_in">push</span>(<span class="built_in">node</span>(a));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(!p.<span class="built_in">empty</span>())&#123;</span><br><span class="line">		cout &lt;&lt; p.<span class="built_in">top</span>().a &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">		p.<span class="built_in">pop</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>structure</tag>
        <tag>helping</tag>
      </tags>
  </entry>
  <entry>
    <title>I have some inspire</title>
    <url>/2024/05/10/2024-5-10/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="3194ed2b2cc630f87be1c615feb7dd5f45c39a17e5405dcaacf94945b9b29de3">dcbb9f7aad60423f5649a1885dea973859c1b46a7fcc7b6c7a5fe127499c659509af40c70468fda9f306c9ea891806575912d9c0205eff8e9a8b52904101b8d15a8d9877c0b8bbca31efd3633987d27654c5da3b7d85ee37fa6a83d516a019c1dc90db11bfba67b27687118ca900ffc6d31553e6ba26262369b3c84d814ee4af954d707e02d63c6e10dbaf610202cec27fe38da3c9f43f7db293a4f34763dba9be2e7007d64fdb8ed6598e9382f1ee599293ff2e5365a204f74755d89b418ea3434b456205c95460c691b52dd085d7f7927c4aa6294ecbf6e9ebb4ee834d16401430f232c556ce870631441123f6e1538a382d18d2e3c20d12c0da533fe9d62f021f350e051777a66f6a9f967f522070eff3c889d6d763bb67ad0a840982bcc887edc58e6f661abf7684f5ddb673e3db4a22a4976f2e5448c2824cbb10d0d60a17e97ccf58e2e148fd1f50118311beacbed0471a7bf51939154e926bed6e9f330adb5bad2aa7329bc31412279e31c124bbe3512a899c6af73f0c8b428cc761470b9a25e2893d64460bb798132731ffff94133fc423ad8f9722b5e6bc4ef7d4a31ef05cb31e99857f4d098ef743d538da4a57a70ae97b9bb8cfdd902edb8fc15350fb52266496a4f30560af1651aace23c6e386f8047a9500afc518de226dce2ff8aab24d55da48de41a988d583272151bd9236e7e6309d1f5e8c17c88fb7265b9e1e9d6dd8dca2659fd8e79692d808999088a78a30d613f09bd76fba006e1d2c245c8da4655b67f0b73f197bee4db4ac2392cb84df14514150a2a9f84fb11be179aef0f1f5804d7080e5f243fa4af71bfa46b211596e6b757756b4a029409a2f8d23dd12f4d8a330b63267549fac235dec2c945f636eddf42b664e01f698cfa9c4afd33e0e96ac3fb90d3ac4d3158aff6dda06134036088a63d46adf4af45e5c5e06355397a9686a6e7a7262456ddbf21eb7003aa65c8d6dafe5894de5641d9662bd8a76705b68a241329109b159d2b294ac83751723a063c2e4337cc4622c995ecf499898d22dd9ca1dbb1a0d98860c10d9fc5959f27bacf31c767150b9e2e7b8567085429beba68aa643db4a3f396207b7ddd08dbcab86aa2c1e70389aa5ed9de3059bfdf8fcedefa9234b796b3f27</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>Application of Stack and Queue</title>
    <url>/2023/03/25/Application-of-Stack-and-Queue/</url>
    <content><![CDATA[<h2 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h2><p>It can processing problems which have a <strong>complete inclusive relationship</strong>.</p>
<blockquote>
<p>We also can call that <code>FILO</code> , it mean <strong>First IN Last Out</strong></p>
</blockquote>
<hr>
<h2 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h2><p>This structure like queue, when we buy something we should form a line. <del>I don’t know what I say</del></p>
<blockquote>
<p>We alse can call that<code>FIFO</code> , it mean<strong>First IN First Out</strong></p>
</blockquote>
<hr>
<table>
<thead>
<tr>
<th align="left">Structure</th>
<th align="left">Application</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Stack</td>
<td align="left">Trees’ deep traversal, deep priority search</td>
</tr>
<tr>
<td align="left">Queue(circulate)</td>
<td align="left">Trees’ layered traversal, wide priority search</td>
</tr>
<tr>
<td align="left">Monotonous Stack</td>
<td align="left">Near the maximum(minimum) value</td>
</tr>
<tr>
<td align="left">Monotonous Queue</td>
<td align="left">The maximum(minimum) value of interval</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>Structure</tag>
        <tag>Stack</tag>
        <tag>Queue</tag>
        <tag>helping</tag>
      </tags>
  </entry>
  <entry>
    <title>Brian help me prepare interview</title>
    <url>/2024/05/24/Brian-help-me-prepare-interview/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="72618ff6f5d96566dc6508b9c28ca5faa6885d4aa5f534e15ec9181a03da1127">dcbb9f7aad60423f5649a1885dea973859c1b46a7fcc7b6c7a5fe127499c65950b985fc42edacfff6d4ec6c06ca2cbeac470426953f1b07aaefb376ab5d7da088559207daafac8b619fe775d7ddb56831298cbbf0e04c5e829b16372e659b5683e6fe220625fa58d68a6bce044685d08d37775c014c3f69de882ce627ed646cb9fee5d3ed69ff0850f632e20d32a0db5593ebb80bc96c638fe2f1bdc0acb0c538de076d52ced3deaa4972a67ea467d853497c354d6e0dfaa77b32230cb9cc19d888a965290878aa4d0347271a673b016fb79b5ac2aaf4f9dad21809757349f0d1c37b58cf158f1dacf71a7c6e9e6f02e8357d6645e546837b70158b44b204dc970df8ac883633e2c96b8f31422a7eb78943a271a9291cf11045bc49d0d0aec5e84bd50ad578d1cc1c83e4af908116c7cd5e3061d23b7a19881cfb05a65170bf81d100be20ce3c9402b426b3f7ce479bc61df14f450fa9af2c295d89696a65a6f8802d65854cb9119501c2f07ab4c8201f5f5b69f66240103df9cdc8f7e20bf3504fe65d87bddc099f61f0361a5e0b001adaacf725d30b13821af25c6c13bd4ed66ed192c60232abfc7e081a1ffa5fc50394aada3fcc8b515b7211a7f6387dea0e03a5fa3dd173f08a2c27cdd2216c1ff7ea1346d0404fe551b6a75b505953afced2921cca466e95eec5da044937f2e6f1f17c4df6372401ab026aa0b7b6ad10f4358acc0c12005f00751255985b74e7b7f4080220327de45282c1c4b2466c4b6cc7f2d98e47121d67caf0f72d1145614b083b06b55030d9774c3d0c08319632f77862995aa9705d85be3d0fc0a135264df053cc1a52cd9de6f9ad8eb45b7bb3694828e5d6f890dc9b013552779ba07c4edb9e8875c28efe8d8929dab579e702432a8726a2f899cb6d1ad0319d74ee56b5b71a4170d4e8c74c1b772bedae4a9162d2de64d9dd7ae74e6a7e9c9c51cd33ab31daebb832513275b0018815983a74ae85b1d2e9e8817a2a84cf770a033b35eb630b14cb25542c8202d3832407eea4439ba5d45225cb186bf6286456982791073b3f2c042863b285abee66fbb0eca71662f9d3b2ee43ea5ff36f2c63af79d74c7218d1550db181366ef9227a0aea20094907989d3ef1cea72eec18c433bc1875a7dc347fd5beae13beb57f62bcfc4e875b8019f5caae0b4b422cbad7620a89847af58a3899435f76a9c8938a11e5db6af9ffd8c170a2145dc3731c970baaefea468dd703c5907d27e2df83be9fd9f7ec1ae168423bb89b1967627fbca54ec6f880052cd4fee2cd0f0a7cb6dcaafbd0ba93409fb4726eb142b20f79b9c966cf0dbf6f289f56395136a89cea8f765dd1e8aa8ed96726cb950827b7655c6988577ec21af4ed1edd2460517517e44b7d9d3cc752388bf3945b5c0d6c71c159d71fcad2efd61445202e0fd4b78d3a2e16215d93f3bb29803e12f2021bb504c9433fd1f1cf17b85bfdf48ef5b30a052644541</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>Have a dinner with the team</title>
    <url>/2024/05/12/Have-a-dinner-with-the-team/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="e35bdbac043d32585c4fbc96791cc6b686780b84e2e160967039f30d96f37644">dcbb9f7aad60423f5649a1885dea9738bd2a220c96d161a7b1b071e33d307f5c3c808a6b94b735d248f4897c5b8ed3210ffeb787af21518cba59006240d0645b81948be43fa4432c9452f5ba0cbf0c7bc90d2d2e057d7867d7be2f375b9849fa0db7727cbf7224988ebb3945181b3f4969ee2860ccee72116ffe6d96062b479840c893cc26e4d71a66315e9d779a3d2c2fb142f1bc91df6e29b58efa57fae3457982239f99d200416f378d20c1ea8fc6902f202960a137bc6baa7541f411d1bc3ffbb57a2de4abe1bb10b374ea0181474494981bb7cb0ab215d7fdbef87ab1c619609f515122548e08b390da65ae7074683d0fd580282b85f5cbc6b52e070956e9ba4ce24fd5fb55e717b974a36b220dfad3c68c84416115818c5cce04bc68f09354e990c8dd6f034bbe30c82297335bca5ae91c9e29e77417e8a8e27b54a4a305e67ce828260812b33d6951f2bc9fab4ae70cea62bd132764905d3c8807de78844d2d7b7faa67a0fd7743241ff3ea2f8be2ad9f2909f108e26f8cdbf629746ca53c5519dac199a0062eab3a6c23ccf047b956bbe6b34326b430767f90138712269c4932de80f6e8ad44855c2ec141b877adc983560f695933d3e9640fac4034df1dee77b91da06ec1c1d9bde01fe06b</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduce Binary Trees&#39; structure</title>
    <url>/2023/03/28/Introduce-Binary-Treesstructure/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/weixin_43762934/article/details/85539672">There is include the majority professional words</a></p>
<span id="more"></span>

<h1 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h1><h2 id="1-Every-node-at-most-two-children"><a href="#1-Every-node-at-most-two-children" class="headerlink" title="1. Every node at most two children ."></a>1. Every node at most two children .</h2><h2 id="2-There-is-one-more-leaf-node-than-the-number-of-two-child-nodes"><a href="#2-There-is-one-more-leaf-node-than-the-number-of-two-child-nodes" class="headerlink" title="2. There is one more leaf node than the number of two child nodes."></a>2. There is one more leaf node than the number of two child nodes.</h2><blockquote>
<p>prove: n0+n1+n2&#x3D;n1+2*n2+1<br>so: n0&#x3D;n2+1</p>
</blockquote>
<h1 id="categories"><a href="#categories" class="headerlink" title="categories"></a>categories</h1><h2 id="1-Complete-binary-tree-important"><a href="#1-Complete-binary-tree-important" class="headerlink" title="1. Complete binary tree (important)"></a>1. Complete binary tree (important)</h2><p>Every layer is full except the last one, and the right side of the last layer is empty.</p>
<h3 id="1-Node-numbered-i"><a href="#1-Node-numbered-i" class="headerlink" title="1. Node numbered i"></a>1. Node numbered i</h3><p>left child number: 2*i<br>right child number: 2*i+1</p>
<h2 id="2-full-binary-tree"><a href="#2-full-binary-tree" class="headerlink" title="2. full binary tree"></a>2. full binary tree</h2><p>All the node either two child or none child.</p>
<h2 id="3-Perfect-binary-tree"><a href="#3-Perfect-binary-tree" class="headerlink" title="3. Perfect binary tree"></a>3. Perfect binary tree</h2><p>Every layer is full, it is perfect.</p>
]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>algorithm</tag>
        <tag>Structure</tag>
        <tag>BinaryTree</tag>
        <tag>helping</tag>
      </tags>
  </entry>
  <entry>
    <title>My MOI</title>
    <url>/2024/05/05/My-MOI/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="1289fc5e1bdc5fb032d9fc2b827834a6b010049e43f957bcd2ad3c94dcd88602">dcbb9f7aad60423f5649a1885dea973859c1b46a7fcc7b6c7a5fe127499c6595b2754275585c0885266f46e53c3b0e80bffd7915d383dfda33b98ad8e157c2372a711b44a1ffbba3bf45c491112df5018eb3f626b7eeaf4a24de92ea7f81cb3c094f01f6c8efa876a432d293723f6e395f407281507f7499fa68a860e1e5d2a1d9096c23f150f2bc632ea837bc275146a860362169cca2be9d79ee34962540aee6aeba3072580cfcdc888fd58cf56410b85ca9711da15a3e590dae90491a59d1ec662e02c55d33dfbcebf998f394b82b72ed5e16b61eff237d86b11e4a7aa5bfbc19bbe2d0d46dc3fb235a79ee1e3c488e46f74ceeb82dad8dc487f87bd181987cd83e6a66033d71dd31b4edeec001a6be98c090242c439435a67003ed0266bf4af9161f58b8594fcc06744f9a55ebce0e3f8242fce2dc1e33c5dbb792e9ff7b2c87bb4c4c83fcead882e6be119fcbba506fa1609f810f308223d0911d23d1d7c84e57e386d7156b57fabe211ddad660dbe3ed305feb773c7e0770ccc043d01487b968e9004c990fc9d012f2ade6ef8cf07ddf322daf2db4055625517a2ace31218552a181f6e03a9cf3e3e962d6bc52f7c343e183815b7b3a15f5b68c6abfb48de5f360e0b33d7ddb50bf548e3b9a2eda9c955851b4ba95fd6f880ca27c9efe80cd0b8273b1f899feb0c1651fffb869ac6749cbfc0ed6bf295dc059a34d3a5f</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>Nico Birthday</title>
    <url>/2024/05/16/Nico-Birthday/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="bf420584750c5f73d38b314d44d5ec53de71bc550e9725236c3249a55027a17e">dcbb9f7aad60423f5649a1885dea973859c1b46a7fcc7b6c7a5fe127499c659538098b88a784491cd9552151799e66ea0e251c43c0ba117977afd38246731f065078a659f5adf86ea9b1f2d044ae320de4b6b0cca2a418ccc81f34bb5abb2de3eb126d0af483f5e667cd4577ef9e19bc295ce36decc298ac645a3fecab4a83d80d6e5551986e2f3eba3199da0dfb38d1214347ab808f8a11df108f9214c3eed1f750d0858340c7e2051e5eee667f70ef737734011bc04f08b8714d0dd49c35c994a7442f36263dcd4f809ce252bdd5723256c8ed0981603643e00640e240b411aa7568dd7b547ae9581d02f3d50fadabece43146d2fb1b27d599566e67f10761c785d7b359877eab57428c44b33d2b54e73ef286324b274617779b8791e426e7705b428716064dd17f95224188e35d08f35b0fe239bb51900301ec783c6677a5e1ad7e538e2e2932e1fbbddcd91a3d217321872e9e713e3068a9684c1f4d6589a2fcfe782fe585cd2a95ac0fb0bb3d36c9ae2264ab6794809205552dddb7cf3f747091b0e1c6f63a69650911992279b9420f9d8555685b0b11ed01ff18f2b60fc8ec903087ccd4eee6482bcc3235b05b730438763282638473daa60bea71e35316a9cdb76c11cd427bb3ac9daac75d362703aa3888443c2a9b8ee84c7c3f228bc799674a11a1f76d2991b9c355f6654f7eafd7f0a9b80c95e35db91a303c0aa53133e45fab1cb6f89e4d36b746ec203eac510355a041ce3c1b1be71455b6b39b7eb478632103b15afd76dcd24643df85dfe935c46e8feafd81c58f75879e09059e4d6ea5614c644471956d80f2ee3a7b8227e34d29c79a0eb128233c590c80747c99469fd47f9a65ab92fcf9da7811841d44029fd504be927910bcd629348d4696ade5007b2ff4266a8026d27b164de0e9ffd6ce146ca6b51afad3c50fa3ae10a962f34f040a035fdeddde480444b1dc0713e8f895108b394335e2e636c6d82e94cc683aa295a5bf15df5c122921d7c7bab6ed774572c27951d93bc63d673a9371e2f12b752dfbfc04e5daee57f18e9eee63fa6231a1fa84affd072d83a0ae946b6ac362a9a23830d08bdb81e33c42119df7428c6fa71a5af0a56d866da370a0acd2a92f5d10c93422ab842edab771ccf07716d8f7ae569404bfa0bc388e1cc82aad38c294db2c23d785f60797655f02287fbbed5e3233d9537805c42ce121554415b5c54329c9a984a10457cfab5ff7ecb679726fac53790c99581d3fdf3b605c34b7b61be623c6c1cca5f9d63b97b14524197690ad4d854f7f4ddffd303a7552c6a48ef5358bb5270e8de9dcf9d811</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>P1305 新二叉树</title>
    <url>/2023/02/05/P1305%20%E6%96%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
    <content><![CDATA[<h1 id="P1305-新二叉树"><a href="#P1305-新二叉树" class="headerlink" title="P1305 新二叉树"></a><a href="https://www.luogu.com.cn/problem/P1305">P1305 新二叉树</a></h1><hr>
<p>I initialization a multidimensional <strong>map</strong> .<br>It is because the questions will give you a whole BinaryTree’s value,so that I can create a multidimensional map to stor these value one by one.<br>And then,I have written a recursion.It is not complexity.<br>I have saved the begin root.Create a recursion while can preoder traversal the BinaryTree.</p>
<blockquote>
<p>If you move <code>cout&lt;&lt;a;</code> to the end of the <code>dfs()</code> ,that will become a postorder traversal.It is a intersting point.</p>
</blockquote>
<p>In the<code>dfs()</code> have two <strong>super operate</strong> because the problem can divide into <strong>left and right</strong> road,then the subproblem also can divide into two subproblem.</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">map&lt;<span class="type">char</span>,pair&lt;<span class="type">char</span>,<span class="type">char</span>&gt; &gt;f;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> a,b,c,A;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">char</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;a;</span><br><span class="line">    <span class="keyword">if</span>(f[a].first!=<span class="string">&#x27;*&#x27;</span>)<span class="built_in">dfs</span>(f[a].first);</span><br><span class="line">    <span class="keyword">if</span>(f[a].second!=<span class="string">&#x27;*&#x27;</span>)<span class="built_in">dfs</span>(f[a].second);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    cin&gt;&gt;A&gt;&gt;b&gt;&gt;c;</span><br><span class="line">    f[A].first=b;</span><br><span class="line">    f[A].second=c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">        f[a].first=b;</span><br><span class="line">        f[a].second=c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(A);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>yeeee~ ~ ~</p>
]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>algorithm</tag>
        <tag>BinaryTree</tag>
        <tag>recursion</tag>
        <tag>helping</tag>
      </tags>
  </entry>
  <entry>
    <title>a normal day</title>
    <url>/2024/05/17/girls_basketball_S2A/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="c83cd266f22ff1ce94cb1c474ca8aa8a3934a703be5993b56a2336978b1f3846">dcbb9f7aad60423f5649a1885dea9738bd2a220c96d161a7b1b071e33d307f5c7205acbd26fe704984f900f3740f082e6c794e67f0e4859875b021559d4868a27f0f1a9264f22e84230f589af1f0c08bc30f3de90b2c526fa5899c3189f6300feb0c01970856959da57b64b83c9c3009f345c88ffaefbed33985a786e249a1d94868fcd3bbde54e4afbeb4e20fd08367cb9924bdba3846d9e7511536a102cbb31ee349a812c754d8a37f299df5d30a6fcc44b681d9b0001560654fe2fd3cade4d020426ed2c29f4bef9d7ef8bfeb775eb6e63ab9fb25a28e08b21e30b0c50f1af5a75e2500664e2c59b5a44ecf6efb194b5b86fe5b070c5a98a4dae921b1f03e6b8868e4459300c68b7bb0ca012b3c80ae05793c3c6d0157e7550ab329fba8bf509a13aefd1b06dca1956f957477a7a338db0033befd4df1ba7f64b62e483951d3aff300802c718b72f37752027c25b3e3148818616a344cf1978f961a9d5a708846752f815cf37dca44f256fcf8caed030da201765fd7d92f300e8651e177c61799db672271a6aaf3247f37f16294b5c803a8f519463759979143d8b6c6d1739ca86c128a6c9b9f2602078f1b27f15288807062ba50d7ce8af7a40f96d6a3980803ac2b8088b9a8463109476a9302f97c529671fe988b8a85e440115a8485b053ccbd2f38bc62f1f72a720cf8ba236fd57910c49cf6aed2bc1bbde3373547db</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>my reflection about the civil test</title>
    <url>/2024/06/03/my-reflection-about-the-civil-test/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="c286fe435f14aadcdbea1aee37622787517151d9b0a74de330e14b08388cdbc9">dcbb9f7aad60423f5649a1885dea973862559d391ebbb01281e5c89925e069cfa230f6dd278d8ff80851cd23ec13855c06b6f4052ce737e31641d6e735499d6030d4a15645aa430ea6a2b6dee9c2f92b106e3c5be8e97d123052405dc80354b8c43648be175353fd50db03ce956eb67ca34f793c1fa67711af655793e8b9fa123e6f18838f7104807ec9a36af8915ac261aabfcf31efea22b4c8dc29e8ea758f820dfd9accd7d453fec49763db871e50385500dd0eddbf7edcbccadaf051d47ed5b9912c16b002d2b946cd6a87a97adbf6f44b61712fe5ef59c44f5d0ea4cc08ab6153abf2b22cfd8799c5664f8e62dda94352506f4aab6bb3635db433e688504ee7bbd3799769b867d4a4c7f7f5587a48eca308aa07f50894d5b354a0fefc022137f2e95f97302980dbf4f1f7ffebe0c93d8283a7eda10376594f81d6bf52bfaa34c230c78146bf8976fcb798405f25bd5871f656f910b969ec4d811f0cc14aa9c16aea08acaa024553fc9d3375cf624cc3bd85b99ff2f8a76f1bc2c4807763ef3353d2e7e0645492162768d2d7ff1e3d9891f7e8ef498b7fd1c3d91bab59b6ac5e3980bf56716b3681697b6f59bb417f1490c03332cedee64d4208c0a9a53381fec5e2e45fb80e16ae9193f8406b9507585f01f7307bb2fe7d2ee3863d84286b5d63e10b229af7626cc16a87dff7a0c82c543af8169073632133f2af6a0c4fc61f63274c13733380a1c673d88a5388a8c4a701688d7a9178f79ec17b8bef89c2bba992482cb02fd373294ff99fac50fa2f325e4637cd268bcbf39ef9b83bfce9ad839f410542a72f72fac0408e506c6d77630cd2492dd4e7d86146d1526ade160645014a01de8455bed44a2b32b35b707369780eb6982beae58c44b17f297ac063cf5897432afb0bf4adb156492852a4e30a0e6d3d5b681ab9f70b1028cfbd4d01d1e2b6e4202c3fb5b4f45fb9beb00a0247dc2c58f96cda53d3bcd8934749020fc4263b4a921d35235ae57dec6144ec43009bedc40e7a8d5cf1c84fc822a7a3360057b931fbbc90dde236e2ac71b04acd7b2aa1b375b629e3821c179e38d11b3b8cd0c1db8f1c0106d8d93a5055f8f823f1ca4ffcb29d02d5ae96df811f0e21169039cc661bf8a49cf35b10e0fcb3</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>openjudge1.4(16-21)</title>
    <url>/2023/01/18/openjudge1.4(16-21)/</url>
    <content><![CDATA[<h1 id="1-4编程基础之逻辑表达式与条件分支"><a href="#1-4编程基础之逻辑表达式与条件分支" class="headerlink" title="1.4编程基础之逻辑表达式与条件分支"></a>1.4编程基础之逻辑表达式与条件分支</h1><h2 id="16-三角形判断"><a href="#16-三角形判断" class="headerlink" title="16) 三角形判断"></a>16)<a href="http://noi.openjudge.cn/ch0104/16/"> 三角形判断</a></h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>给定三个正整数，分别表示三条线段的长度，判断这三条线段能否构成一个三角形。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入共一行，包含三个正整数，分别表示三条线段的长度，数与数之间以一个空格分开。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>如果能构成三角形，则输出“yes” ，否则输出“no”。</p>
<hr>
<p>就是用普通的方式判斷三⻆形是否成立</p>
<blockquote>
<p>重點: 數學</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a,b,c=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> a+b&gt;c <span class="keyword">and</span> a+c&gt;b <span class="keyword">and</span> b+c&gt;a:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;yes&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;no&quot;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="17-判断闰年"><a href="#17-判断闰年" class="headerlink" title="17)判断闰年"></a>17)<a href="http://noi.openjudge.cn/ch0104/17/">判断闰年</a></h2><h3 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h3><p>判断某年是否是闰年。</p>
<h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>输入只有一行，包含一个整数a(0 &lt; a &lt; 3000)</p>
<h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>一行，如果公元a年是闰年输出Y，否则输出N</p>
<hr>
<p><code>公历纪年法中，能被4整除的大多是闰年，但能被100整除而不能被400整除的年份不是闰年， 能被3200整除的也不是闰年，如1900年是平年，2000年是闰年，3200年不是闰年。</code><br>能被4整除的大多是閏年，但不能被4整除的<strong>一定不是閏年</strong>，能被100整除而不能被400整除的年份不是闰年，把這兩條件結合就行了</p>
<blockquote>
<p>重點: 逆向思慮</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> (a%<span class="number">4</span>!=<span class="number">0</span>) <span class="keyword">or</span> (a%<span class="number">100</span>==<span class="number">0</span> <span class="keyword">and</span> a%<span class="number">400</span>!=<span class="number">0</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;N&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Y&quot;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="18-点和正方形的关系"><a href="#18-点和正方形的关系" class="headerlink" title="18)点和正方形的关系"></a>18)<a href="http://noi.openjudge.cn/ch0104/18/">点和正方形的关系</a></h2><h3 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h3><p>有一个正方形，四个角的坐标（x,y)分别是（1，-1），（1，1），（-1，-1），（-1，1），x是横轴，y是纵轴。写一个程序，判断一个给定的点是否在这个正方形内（包括正方形边界）。</p>
<h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>输入一行，包括两个整数x、y，以一个空格分开，表示坐标(x,y)。</p>
<h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>输出一行，如果点在正方形内，则输出yes，否则输出no。</p>
<hr>
<p><strong>y軸</strong>和<strong>x軸</strong>的范圍是**[-1~1]**，所以用if就行</p>
<blockquote>
<p>重點: 函數圖</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a,b=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> a&gt;=-<span class="number">1</span> <span class="keyword">and</span> a&lt;=<span class="number">1</span> <span class="keyword">and</span> b&gt;=-<span class="number">1</span> <span class="keyword">and</span> b&lt;=<span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;yes&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;no&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="19-简单计算器"><a href="#19-简单计算器" class="headerlink" title="19) 简单计算器"></a>19)<a href="http://noi.openjudge.cn/ch0104/19/"> 简单计算器</a></h2><h2 id="描述-3"><a href="#描述-3" class="headerlink" title="描述"></a>描述</h2><p>一个最简单的计算器，支持+, -, *, &#x2F; 四种运算。仅需考虑输入输出为整数的情况，数据和运算结果不会超过int表示的范围。</p>
<h2 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h2><p>输入只有一行，共有三个参数，其中第1、2个参数为整数，第3个参数为操作符（+,-,*,&#x2F;）。</p>
<h2 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h2><p>输出只有一行，一个整数，为运算结果。然而：</p>
<ol>
<li>如果出现除数为0的情况，则输出：Divided by zero!</li>
<li>如果出现无效的操作符(即不为 +, -, *, &#x2F; 之一），则输出：Invalid operator!</li>
</ol>
<hr>
<p>反正就是判斷是<code>+-*/</code>，然後就<code>print()</code>出來</p>
<blockquote>
<p>重點: 判斷符號</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a, b, c = <span class="built_in">input</span>().split()</span><br><span class="line">a = <span class="built_in">int</span>(a)</span><br><span class="line">b = <span class="built_in">int</span>(b)</span><br><span class="line"><span class="keyword">if</span> b == <span class="number">0</span> <span class="keyword">and</span> c == <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Divided by zero!&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> c == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(a+b)</span><br><span class="line">    <span class="keyword">elif</span> c == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(a-b)</span><br><span class="line">    <span class="keyword">elif</span> c == <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(a*b)</span><br><span class="line">    <span class="keyword">elif</span> c == <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">int</span>(a/b))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Invalid operator!&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="20-求一元二次方程的根"><a href="#20-求一元二次方程的根" class="headerlink" title="20) 求一元二次方程的根"></a>20)<a href="http://noi.openjudge.cn/ch0104/20/"> 求一元二次方程的根</a></h2><h3 id="描述-4"><a href="#描述-4" class="headerlink" title="描述"></a>描述</h3><p>利用公式x1 &#x3D; (-b + sqrt(b<em>b-4</em>a<em>c))&#x2F;(2</em>a), x2 &#x3D; (-b - sqrt(b<em>b-4</em>a<em>c))&#x2F;(2</em>a)求一元二次方程ax2+ bx + c &#x3D;0的根，其中a不等于0。</p>
<h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>输入一行，包含三个浮点数a, b, c（它们之间以一个空格分开），分别表示方程ax2 + bx + c &#x3D;0的系数。</p>
<h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>输出一行，表示方程的解。<br>若b2 &#x3D; 4 * a * c,则两个实根相等，则输出形式为：x1&#x3D;x2&#x3D;…。<br>若b2 &gt; 4 * a * c,则两个实根不等，则输出形式为：x1&#x3D;…;x2 &#x3D; …，其中x1&gt;x2。<br>若b2 &lt; 4 * a * c，则有两个虚根，则输出：x1&#x3D;实部+虚部i; x2&#x3D;实部-虚部i，即x1的虚部系数大于等于x2的虚部系数，实部为0时不可省略。实部 &#x3D; -b &#x2F; (2<em>a), 虚部 &#x3D; sqrt(4</em>a<em>c-b</em>b) &#x2F; (2*a)</p>
<p>所有实数部分要求精确到小数点后5位，数字、符号之间没有空格。</p>
<hr>
<p>把式子copy落去就得啦，再占保留小數點後5位</p>
<blockquote>
<p>重點: 分段函數</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a,b,c=<span class="built_in">map</span>(<span class="built_in">float</span>,<span class="built_in">input</span>().split())</span><br><span class="line">x1= (-b + <span class="built_in">pow</span>(b*b-<span class="number">4</span>*a*c,<span class="number">0.5</span>))/(<span class="number">2</span>*a)</span><br><span class="line">x2 = (-b - <span class="built_in">pow</span>(b*b-<span class="number">4</span>*a*c,<span class="number">0.5</span>))/(<span class="number">2</span>*a)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">pow</span>(b,<span class="number">2</span>)==<span class="number">4</span>*a*c:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;x1=x2=%.5lf&quot;</span>%x1)</span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">pow</span>(b,<span class="number">2</span>)&gt;<span class="number">4</span>*a*c:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;x1=%.5lf;x2=%.5lf&quot;</span>%(x1,x2))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    q= -b / (<span class="number">2</span>*a)</span><br><span class="line">    w=<span class="built_in">pow</span>(<span class="number">4</span>*a*c-b*b,<span class="number">0.5</span>) / (<span class="number">2</span>*a)</span><br><span class="line">    <span class="keyword">if</span> q==<span class="number">0</span>:</span><br><span class="line">        q=<span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> w==<span class="number">0</span>:</span><br><span class="line">        w=<span class="number">0</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;x1=%.5lf+%.5lfi;x2=%.5lf-%.5lfi&quot;</span>%(q,w,q,w))</span><br></pre></td></tr></table></figure>

<h2 id="21-苹果和虫子2"><a href="#21-苹果和虫子2" class="headerlink" title="21) 苹果和虫子2"></a>21)<a href="http://noi.openjudge.cn/ch0104/21/"> 苹果和虫子2</a></h2><h3 id="描述-5"><a href="#描述-5" class="headerlink" title="描述"></a>描述</h3><p>你买了一箱n个苹果，很不幸的是买完时箱子里混进了一条虫子。虫子每x小时能吃掉一个苹果，假设虫子在吃完一个苹果之前不会吃另一个，那么经过y小时你还有多少个完整的苹果？</p>
<h3 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h3><p>输入仅一行，包括n，x和y（均为整数）。</p>
<h3 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h3><p>输出也仅一行，剩下的苹果个数</p>
<hr>
<p>判斷是否被整除，没有的話要加1，因為就算只被咬了0.1，整個蘋果作廢</p>
<blockquote>
<p>重要: 是否整除</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n,x,y=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> y%x!=<span class="number">0</span>:</span><br><span class="line">    a=y//x+<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    a=y//x</span><br><span class="line">n-=a</span><br><span class="line"><span class="keyword">if</span> n&lt;=<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(n)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>openjudge</tag>
        <tag>helping</tag>
      </tags>
  </entry>
  <entry>
    <title>openjudge1.4(1~5)</title>
    <url>/2022/12/24/openjudge1.4(1~5)/</url>
    <content><![CDATA[<h1 id="1-4编程基础之逻辑表达式与条件分支"><a href="#1-4编程基础之逻辑表达式与条件分支" class="headerlink" title="1.4编程基础之逻辑表达式与条件分支"></a>1.4编程基础之逻辑表达式与条件分支</h1><h2 id="1-判断数正负"><a href="#1-判断数正负" class="headerlink" title="1) 判断数正负"></a>1)<a href="http://noi.openjudge.cn/ch0104/01/"> 判断数正负</a></h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述:"></a>描述:</h3><p>给定一个整数N，判断其正负。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入:"></a>输入:</h3><p>一个整数N(-109 &lt;&#x3D; N &lt;&#x3D; 109)</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出:"></a>输出:</h3><p>如果N &gt; 0, 输出positive;<br>如果N &#x3D; 0, 输出zero;<br>如果N &lt; 0, 输出negative</p>
<hr>
<p>先輸入一個整數，再判斷是大於 0 or 等於0 or小於0 就行了<br><del>so easy</del></p>
<blockquote>
<p>重點:判斷</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;positive&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;zero&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> n &lt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;negative&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-输出绝对值"><a href="#2-输出绝对值" class="headerlink" title="2) 输出绝对值"></a>2)<a href="http://noi.openjudge.cn/ch0104/02/"> 输出绝对值</a></h2><h3 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h3><p>输入一个浮点数，输出这个浮点数的绝对值。</p>
<h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>输入一个浮点数，其绝对值不超过10000。</p>
<h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>输出这个浮点数的绝对值，保留到小数点后两位。</p>
<hr>
<p>輸入一個浮點數，再保留兩位小數輸出絕對值就ok了</p>
<blockquote>
<p>重點:占位輸出和abs函數</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x=<span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%.2f&quot;</span>%<span class="built_in">abs</span>(x))</span><br></pre></td></tr></table></figure>

<h2 id="3-奇偶数判断"><a href="#3-奇偶数判断" class="headerlink" title="3)奇偶数判断"></a>3)<a href="http://noi.openjudge.cn/ch0104/03/">奇偶数判断</a></h2><h3 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h3><p>给定一个整数，判断该数是奇数还是偶数。</p>
<h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>输入仅一行，一个大于零的正整数n。</p>
<h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>输出仅一行，如果n是奇数，输出odd；如果n是偶数，输出even。</p>
<hr>
<p>先輸入一個整數，用%去取余數，判斷是否能被2除盡</p>
<blockquote>
<p>重點:利用%</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> a%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;even&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;odd&quot;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="4-奇偶ASCII值判断"><a href="#4-奇偶ASCII值判断" class="headerlink" title="4) 奇偶ASCII值判断"></a>4)<a href="http://noi.openjudge.cn/ch0104/04/"> 奇偶ASCII值判断</a></h2><h3 id="描述-3"><a href="#描述-3" class="headerlink" title="描述"></a>描述</h3><p>任意输入一个字符，判断其ASCII是否是奇数，若是，输出YES，否则，输出NO<br>例如，字符A的ASCII值是65，则输出YES，若输入字符B(ASCII值是66)，则输出NO</p>
<h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>输入一个字符</p>
<h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>如果其ASCII值为奇数，则输出YES，否则，输出NO</p>
<hr>
<p><del>呢個用python做比較麻煩，差啲諗住用c++算了</del><br>主要係python嘅<code>input()</code>會收空氣，就係你直接<strong>回車</strong>，嗰變量c就變成<code>&quot;&quot;</code>空字符串了，長度為0，但係<code>ord()</code>要長度為1的字符，所以直接把c放入會報錯，要先判斷c的長度是否為0，才能進行下一步。</p>
<blockquote>
<p><code>ord()</code>是把裏面的字符轉為ASCII碼</p>
</blockquote>
<p>把字符c變為ASCII再和上題一樣的操作就ok了</p>
<blockquote>
<p>重點:判斷特殊情况，判斷ASCII碼的奇偶</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c=<span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(c)==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;NO&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">ord</span>(c)%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;NO&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;YES&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="5-整数大小比较"><a href="#5-整数大小比较" class="headerlink" title="5) 整数大小比较"></a>5)<a href="http://noi.openjudge.cn/ch0104/05/"> 整数大小比较</a></h2><h3 id="描述-4"><a href="#描述-4" class="headerlink" title="描述"></a>描述</h3><p>输入两个整数，比较它们的大小。</p>
<h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>一行，包含两个整数x和y，中间用单个空格隔开。<br>0 &lt;&#x3D; x &lt; 2^32, -2^31 &lt;&#x3D; y &lt; 2^31。</p>
<h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>一个字符。<br>若x &gt; y，输出 &gt; ；<br>若x &#x3D; y，输出 &#x3D; ；<br>若x &lt; y，输出 &lt; ；</p>
<hr>
<p>用<code>map()</code>和<code>split()</code>是因為題目分割a和b是用空格，<del>把這串代碼背了就是</del>再判斷a和b的大小關係</p>
<blockquote>
<p>重點:賦值方法，判斷大小</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a,b=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> a&gt;b:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&gt;&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> a==b:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&lt;&quot;</span>)</span><br></pre></td></tr></table></figure>

<hr>
<p>就咁先啦，得閑先更😇</p>
]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>openjudge</tag>
        <tag>helping</tag>
      </tags>
  </entry>
  <entry>
    <title>openjudge1.4(6~10)</title>
    <url>/2022/12/25/openjudge1.4(6~10)/</url>
    <content><![CDATA[<h1 id="1-4编程基础之逻辑表达式与条件分支"><a href="#1-4编程基础之逻辑表达式与条件分支" class="headerlink" title="1.4编程基础之逻辑表达式与条件分支"></a>1.4编程基础之逻辑表达式与条件分支</h1><h2 id="6-判断是否为两位数"><a href="#6-判断是否为两位数" class="headerlink" title="6) 判断是否为两位数"></a>6)<a href="http://noi.openjudge.cn/ch0104/06/"> 判断是否为两位数</a></h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>判断一个正整数是否是两位数（即大于等于10且小于等于99）。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>一个正整数，不超过1000。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>一行。若该正整数是两位数，输出1，否则输出0。</p>
<hr>
<p>用<code>and</code>去判斷</p>
<blockquote>
<p>重點:and</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">a=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> a&gt;=<span class="number">10</span> <span class="keyword">and</span> a&lt;<span class="number">100</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-收集瓶盖赢大奖"><a href="#2-收集瓶盖赢大奖" class="headerlink" title="2) 收集瓶盖赢大奖"></a>2)<a href="http://noi.openjudge.cn/ch0104/07/"> 收集瓶盖赢大奖</a></h2><h3 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h3><p>某饮料公司最近推出了一个“收集瓶盖赢大奖”的活动：如果你拥有10个印有“幸运”、或20个印有“鼓励”的瓶盖，就可以兑换一个神秘大奖。</p>
<p>现分别给出你拥有的印有“幸运”和“鼓励”的瓶盖数，判断是否可以去兑换大奖。</p>
<h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>一行，包含两个整数，分别是印有“幸运”和“鼓励”的瓶盖数，用一个空格隔开。</p>
<h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>一行。若可以兑换大奖，输出1，否则输出0。</p>
<hr>
<p>用<code>or</code>去判斷</p>
<blockquote>
<p>重點:or</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a,b=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> a&gt;=<span class="number">10</span> <span class="keyword">or</span> b&gt;=<span class="number">20</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<h2 id="8-判断一个数能否同时被3和5整除"><a href="#8-判断一个数能否同时被3和5整除" class="headerlink" title="8) 判断一个数能否同时被3和5整除"></a>8)<a href="http://noi.openjudge.cn/ch0104/08/"> 判断一个数能否同时被3和5整除</a></h2><h3 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h3><p>判断一个数n 能否同时被3和5整除</p>
<h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>输入一行，包含一个整数n。（ -1,000,000 &lt; n &lt; 1,000,000）</p>
<h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>输出一行，如果能同时被3和5整除输出YES，否则输出NO</p>
<hr>
<p>用<code>and</code>解決</p>
<blockquote>
<p>重點:and</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> a%<span class="number">3</span>==<span class="number">0</span> <span class="keyword">and</span> a%<span class="number">5</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;YES&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;NO&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="9-判断能否被3，5，7整除"><a href="#9-判断能否被3，5，7整除" class="headerlink" title="9)判断能否被3，5，7整除"></a>9)<a href="http://noi.openjudge.cn/ch0104/09/">判断能否被3，5，7整除</a></h2><h3 id="描述-3"><a href="#描述-3" class="headerlink" title="描述"></a>描述</h3><p>给定一个整数，判断它能否被3，5，7整除，并输出以下信息：<br>1、能同时被3，5，7整除（直接输出3 5 7，每个数中间一个空格）；<br>2、只能被其中两个数整除（输出两个数，小的在前，大的在后。例如：3 5或者 3 7或者5 7,中间用空格分隔）；<br>3、只能被其中一个数整除（输出这个除数）；<br>4、不能被任何数整除，输出小写字符‘n’,不包括单引号。</p>
<h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>输入一行，包括一个整数。</p>
<h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>输出一行，按照描述要求给出整数被3，5，7整除的情况。</p>
<hr>
<p>好似傻咁寫就係了</p>
<blockquote>
<p>重點:耐心</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> a%<span class="number">105</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;3 5 7&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> a%<span class="number">15</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;3 5&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> a%<span class="number">21</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;3 7&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> a%<span class="number">35</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;5 7&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> a%<span class="number">3</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;3&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> a%<span class="number">5</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;5&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> a%<span class="number">7</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;7&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;n&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="10-有一门课不及格的学生"><a href="#10-有一门课不及格的学生" class="headerlink" title="10) 有一门课不及格的学生"></a>10)<a href="http://noi.openjudge.cn/ch0104/10/"> 有一门课不及格的学生</a></h2><h3 id="描述-4"><a href="#描述-4" class="headerlink" title="描述"></a>描述</h3><p>给出一名学生的语文和数学成绩，判断他是否恰好有一门课不及格（成绩小于60分）。</p>
<h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>一行，包含两个在0到100之间的整数，分别是该生的语文成绩和数学成绩。</p>
<h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>若该生恰好有一门课不及格，输出1；否则输出0。</p>
<hr>
<p>恰好一科，所以只可以一科唔合格</p>
<blockquote>
<p>重點:多重羅輯關系</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a,b=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> (a&lt;<span class="number">60</span> <span class="keyword">and</span> b&gt;=<span class="number">60</span>) <span class="keyword">or</span> (b&lt;<span class="number">60</span> <span class="keyword">and</span> a&gt;=<span class="number">60</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>openjudge</tag>
        <tag>helping</tag>
      </tags>
  </entry>
  <entry>
    <title>take the first step</title>
    <url>/2023/01/21/take%20the%20first%20step/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="39a830d81c197bb691649b260b99009928fae970b0d6b2d6869f8a03bf1e42b8">dcbb9f7aad60423f5649a1885dea973859c1b46a7fcc7b6c7a5fe127499c6595ba72ac8eb7b789666a3f184cb57f6ab31f7404aa025f13d515d27f3b4e4891d66038f04e0ede464a73804dfe157e8f1abe489e07ff8b2c730fe2cfee780034f16ad87ffec6382e2df1b88efe8692479413d969dd50929842da749711dc283f96646c583e09ecce0037506cf6e5a15eb88e97586de7366cca34830fc4e729bc35f639eb6af2847587d2b1795e0c940b9fd2f97efd9e10aad8749ec3859d1549b4d361f3fdd1a42a7ccc8e8ecf3ee5b0d28551728290cd77223b6fab2dde5682ec4ae99c971c9022ec467e9b2207961f4864d9cc5b09805200559cff28d1926f943ef9efcf31ecd6ba113cac4a08eba332f29b4e2bf084cf9a2d95794cc29315a3f44dc370f9a9e1e0ef68a2aaf164d3120c9b83a97fd9aa4e89d5590feffc2a4a92c5677a88024a0c93c3c8d68a0e55cf2595fa2e5d242484f7c2f12f3da2a94f8cf3bc4cfe2bb6e36384229d5ce70ddca1bee998282ba6b1e9f6ff4589db11b9eb3a6e1321426295d68ed9c6684737fa8a69453464799481af258e4f0c13dccfce9f998e09b3b997fc15ffd1649da6757c53b40f75ed8cbd5d2363d0b8b6a3ba</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>today is singing competition</title>
    <url>/2024/05/19/today-is-singing-competition/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="79e42cc332f46107290baefa5f0acc410a84a0ca1052dcdf01cdc19e32452ea0">dcbb9f7aad60423f5649a1885dea9738bd2a220c96d161a7b1b071e33d307f5c341175eb8d9ebe03945f07d37b937ef00b020dfbcc74ac3a5157604ac5d7686b8e63763025dec6c53032cdeaf829a5ff97ac1c2e9687ab6b6227f8ee2e903030027b62fc55e3f97ea5896d4b6c68fb3bb7add6508b8a579e3781a759961f91d09230ac01044a881d18eaa62110921b6195a47f63709b6b1989bd634112a2c4e6a874c731d79b277db864b442e7496a128ba36aecb7acf585a54b58d7bd69441d103c565434541f0ab7b9a1242663883dc0ebab60be84e1c9e1d15f286a792d531b0e606aa76af8b5269cf1bc55ec8a8a69f62b74ba9af5014f2f27f038a98f7235e7dc4243603e483af97e2a73981950d59c08eb025018ee85dd269d956d747a687c15d34db57d3cb3d1e3551043d258ccfa4eb82796543f815d328016d6efdf0162e9628474ac350f5726c214f599867a259adc1250dfd1185b785098507614576846809153c07b128e3a2d941ecebf3cd9633bad2689efb2f3d183202eac05a3cc9053e74b76e90fc3b21967c493b9a9fd53b26834150c44e830bc37010dbf3bf9be2bdc7e3c8be10f4717729c41d82aa43298f036d8d3e504cde26aad314a856278862ce7fd1b4552190276640f52e98b7426d2497c83d02a73e562e04bbd0459094bb594f2ca31cae814833fbe2b2f373980e6f43b11329282317cd3b483d72dd0df696532a6c88bcd86664d2a3eeb898f65ec235821a9a6016d582deb4f6fa908376b25de0d6d93687b1d9d5a36c05c802e610bc3c2823f2db7e6feb20614f1d0b1d0716891920b87590c34dc27f8fa52baace397ff7bf91c512f9916dab4884aa1daaa82bb3baec676a2d95b8e92007001878137e9c328cfef087895213b1db4eef4ec934b16f06d15bf1d4259fba1b607bddeb667bb83978a906fc827740ab06d7b68256f29c9856611fced12462fa98421f8078af8cd6e167283a2860ea48fe0ae384e5a8a45078e83859fc2ece514583b1dbdee27e9137ab1f30a20bd8db2f2efef7e97ec2dcc7bfed4e3fc0579ea8ef4cc5fc3a24122411bc11f76c3f0f6eeae961fe58380428d923faecb9a588fe589caee168bb2824641ecbd92e62ca1daf92786f185c54949b8fecb0eadaa933273358e350d8bd282ed8f88fe642b5060ee0411d3c35e8f5119a22f4f644903a9b72b277808f549478468f76d012df169d5873faafa1de4ab0066334c098ce71a8fbdd459f8baa675580a50c18a95539d2d33119e17adfcc725fe44ba1f2e9b50c3fd77f1412bbc171ba1b6e2c91159afcb61628d43bf4887d26e5dfdc53c48fb3cf7c62b8ca61264f825208a44afd4e76d682309b33c63ab428b11a11ccf690d6000ea0bd8d36acc78108ff9</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown用法(html版)</title>
    <url>/2022/12/13/%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<!doctype html>
<html>
    <head>
        <meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>
        <title>Markdown用法</title>
    </head>
    <style>
        a#return {
            width: 200px;
            height: 50px;
            background-color: firebrick;
            text-align: center;
            font-size: 30px;
            text-decoration: none;
            display: block;
        }
        a#return:hover {
            color: yellow;
        }
    </style>
    <body>
        <h1 id='使用markdown不是梦'>使用Markdown不是梦</h1>

        <p>
            <mark>（1）标题</mark>
        </p>
        <h1 id='一级标题'>一级标题</h1>
        <h2 id='二级标题'>二级标题</h2>
        <h3 id='三级标题'>三级标题</h3>
        <h4 id='四级标题'>四级标题</h4>
        <h5 id='五级标题'>五级标题</h5>
        <h6 id='六级标题'>六级标题</h6>
        <p>
            <mark>（2）字体</mark><br>
            <strong>加粗</strong><br>
            <em>斜体</em><br>
            <em>
                <strong>斜体加粗</strong>
            </em><br>
            <del>删除线</del><br>
            <mark>高亮</mark><br>
            我是<sup>上标</sup><br>
            我是<sub>下标</sub><br>
            <mark>（3）列表</mark>
        </p>
        <ul>
            <li>
                <p>一二三四五</p>
                <ul>
                    <li>
                        <p>上山打老虎</p>
                        <ul>
                            <li>
                                <p>老虎没打到</p>
                                <ul>
                                    <li>打到小松鼠</li>
                                </ul>
                            </li>
                        </ul>
                    </li>
                </ul>
            </li>
        </ul>
        <ol start='' >
            <li>一二三四五</li>
            <li>上山打老虎</li>
            <li>老虎没打到</li>
            <li>打到小松鼠</li>
            <mark>（4）表格</mark>
        </ol>
        <figure>
            <table>
                <thead>
                    <tr>
                        <th>Mon</th>
                        <th>TUE</th>
                        <th>WED</th>
                        <th>THU</th>
                        <th>FRI</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>上山</td>
                        <td>上山</td>
                        <td>上山</td>
                        <td>上山</td>
                        <td>上山</td>
                    </tr>
                    <tr>
                        <td>打老虎</td>
                        <td>打老虎</td>
                        <td>打老虎</td>
                        <td>打老虎</td>
                        <td>打老虎</td>
                    </tr>
                    <tr>
                        <td>
                            <mark>（5）引用</mark>
                        </td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                    </tr>
                </tbody>
            </table>
        </figure>
        <blockquote>
            <p>一二三四五</p>
            <blockquote>
                <p>上山打老虎</p>
                <blockquote>
                    <p>老虎没打到</p>
                    <blockquote>
                        <p>打到小松鼠</p>
                    </blockquote>
                </blockquote>
            </blockquote>
        </blockquote>
        <mark>（6）分割线</mark>
        <hr />
        <mark>（7）代码</mark><br>
        <code>我是代码</code>
        <pre><code>我是代码框</code></pre>
        <mark>(8) 超链接</mark><br>
        <a href=''>教程</a>
        <img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1e6dc7e7cae0402ea765142ab92f2c8a~tplv-k3u1fbpfcp-zoom-crop-mark:3024:3024:3024:1702.awebp?" referrerpolicy="no-referrer" alt="网图">
        <a id="return" href="https://edwin0319.github.io/">返回網站</a>
    </body>
</html>]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>幫助</tag>
      </tags>
  </entry>
  <entry>
    <title>openjudge1.4(11-15)</title>
    <url>/2023/01/14/openjudge1.4(11-15)/</url>
    <content><![CDATA[<h1 id="1-4编程基础之逻辑表达式与条件分支"><a href="#1-4编程基础之逻辑表达式与条件分支" class="headerlink" title="1.4编程基础之逻辑表达式与条件分支"></a>1.4编程基础之逻辑表达式与条件分支</h1><h2 id="11-晶晶赴约会"><a href="#11-晶晶赴约会" class="headerlink" title="11) 晶晶赴约会"></a>11)<a href="http://noi.openjudge.cn/ch0104/11/"> 晶晶赴约会</a></h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>晶晶的朋友贝贝约晶晶下周一起去看展览，但晶晶每周的1、3、5有课必须上课，请帮晶晶判断她能否接受贝贝的邀请，如果能输出YES；如果不能则输出NO。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入有一行，贝贝邀请晶晶去看展览的日期，用数字1到7表示从星期一到星期日。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出有一行，如果晶晶可以接受贝贝的邀请，输出YES，否则，输出NO。注意YES和NO都是大写字母！</p>
<hr>
<p>輸入整數再判斷是否為1 or 3 or 5</p>
<blockquote>
<p>重點:or</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">a=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> a==<span class="number">1</span> <span class="keyword">or</span> a==<span class="number">3</span> <span class="keyword">or</span> a==<span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;NO&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;YES&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="12-骑车与走路"><a href="#12-骑车与走路" class="headerlink" title="12) 骑车与走路"></a>12)<a href="http://noi.openjudge.cn/ch0104/12/"> 骑车与走路</a></h2><h3 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h3><p>在北大校园里,没有自行车,上课办事会很不方便.但实际上,并非去办任何事情都是骑车快,因为骑车总要找车、开锁、停车、锁车等,这要耽误一些时间.假设找到自行车,开锁并车上自行车的时间为27秒;停车锁车的时间为23秒;步行每秒行走1.2米,骑车每秒行走3.0米。请判断走不同的距离去办事,是骑车快还是走路快。</p>
<h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>输入一行，包含一个整数，表示一次办事要行走的距离,单位为米。</p>
<h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>输出一行,如果骑车快,输出一行”Bike”;如果走路快,输出一行”Walk”;如果一样快,输出一行”All”。</p>
<hr>
<p>一個簡單的數學題，單車是B(x)&#x3D;x&#x2F;3+50，行路是W(x)&#x3D;x&#x2F;1.2，再判斷B(x)和W(x)的關係</p>
<blockquote>
<p>重點:數學</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">meter=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">B=meter/<span class="number">3</span>+<span class="number">50</span></span><br><span class="line">W=meter/<span class="number">1.2</span></span><br><span class="line"><span class="keyword">if</span> B&lt;W:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Bike&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> W&lt;B:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Walk&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;All&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="13-分段函数"><a href="#13-分段函数" class="headerlink" title="13) 分段函数"></a>13)<a href="http://noi.openjudge.cn/ch0104/13/"> 分段函数</a></h2><h3 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h3><p>编写程序，计算下列分段函数y&#x3D;f(x)的值。</p>
<p>y&#x3D;-x+2.5; 0 &lt;&#x3D; x &lt; 5</p>
<p>y&#x3D;2-1.5(x-3)(x-3); 5 &lt;&#x3D; x &lt; 10</p>
<p>y&#x3D;x&#x2F;2-1.5; 10 &lt;&#x3D; x &lt; 20</p>
<h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>一个浮点数N,0 &lt;&#x3D; N &lt; 20</p>
<h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>输出N对应的分段函数值：f(N)。结果保留到小数点后三位。</p>
<hr>
<p>普通的數學分段函數，直接copy就行，記得保留小數點後三位</p>
<blockquote>
<p>重點:分段函數</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">x=<span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> x &gt;= <span class="number">0</span> <span class="keyword">and</span> x &lt; <span class="number">5</span>:</span><br><span class="line">    y = -x + <span class="number">2.5</span></span><br><span class="line"><span class="keyword">elif</span> x &gt;= <span class="number">5</span> <span class="keyword">and</span> x &lt; <span class="number">10</span>:</span><br><span class="line">    y = <span class="number">2</span> - <span class="number">1.5</span> * (x - <span class="number">3</span>) * (x - <span class="number">3</span>)</span><br><span class="line"><span class="keyword">elif</span> x &gt;= <span class="number">10</span> <span class="keyword">and</span> x &lt; <span class="number">20</span>:</span><br><span class="line">    y = x / <span class="number">2</span> - <span class="number">1.5</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%.3f&quot;</span>%y)</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="14-计算邮资"><a href="#14-计算邮资" class="headerlink" title="14)计算邮资"></a>14)<a href="http://noi.openjudge.cn/ch0104/14/">计算邮资</a></h2><h3 id="描述-3"><a href="#描述-3" class="headerlink" title="描述"></a>描述</h3><p>根据邮件的重量和用户是否选择加急计算邮费。计算规则：重量在1000克以内(包括1000克), 基本费8元。超过1000克的部分，每500克加收超重费4元，不足500克部分按500克计算；如果用户选择加急，多收5元。</p>
<h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>输入一行，包含整数和一个字符，以一个空格分开，分别表示重量（单位为克）和是否加急。如果字符是y，说明选择加急；如果字符是n，说明不加急。</p>
<h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>输出一行，包含一个整数，表示邮费。</p>
<hr>
<p>先判斷是不是<em><strong>加急</strong></em>，再判斷重量是否大於1000，而大於1000的物件要再判斷超過1000的部分是否被500整除，如果除500有小數，都要進一位，再利用你們的數學知識解決吧</p>
<blockquote>
<p>重點:嵌套判斷</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a,b=<span class="built_in">input</span>().split()</span><br><span class="line">a=<span class="built_in">int</span>(a)</span><br><span class="line"><span class="keyword">if</span> b==<span class="string">&#x27;n&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> a &lt;= <span class="number">1000</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">8</span>)</span><br><span class="line">    <span class="keyword">elif</span> a &gt; <span class="number">1000</span>:</span><br><span class="line">        <span class="keyword">if</span> (a-<span class="number">1000</span>) % <span class="number">500</span>==<span class="number">0</span>:</span><br><span class="line">            y=(a-<span class="number">1000</span>)//<span class="number">500</span></span><br><span class="line">        <span class="keyword">elif</span> (a-<span class="number">1000</span>)%<span class="number">500</span>!=<span class="number">0</span>:</span><br><span class="line">            y=(a-<span class="number">1000</span>)//<span class="number">500</span>+<span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="number">8</span>+y*<span class="number">4</span>)</span><br><span class="line"><span class="keyword">elif</span> b==<span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> a &lt;= <span class="number">1000</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">8</span>+<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">elif</span> a &gt; <span class="number">1000</span>:</span><br><span class="line">        <span class="keyword">if</span> (a-<span class="number">1000</span>) % <span class="number">500</span>==<span class="number">0</span>:</span><br><span class="line">            y=(a-<span class="number">1000</span>)//<span class="number">500</span></span><br><span class="line">        <span class="keyword">elif</span> (a-<span class="number">1000</span>)%<span class="number">500</span>!=<span class="number">0</span>:</span><br><span class="line">            y=(a-<span class="number">1000</span>)//<span class="number">500</span>+<span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="number">8</span>+y*<span class="number">4</span>+<span class="number">5</span>)</span><br></pre></td></tr></table></figure>

<h2 id="15-最大数输出"><a href="#15-最大数输出" class="headerlink" title="15)最大数输出"></a>15)<a href="http://noi.openjudge.cn/ch0104/15/">最大数输出</a></h2><h3 id="描述-4"><a href="#描述-4" class="headerlink" title="描述"></a>描述</h3><p>输入三个整数,输出最大的数。</p>
<h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>输入为一行，包含三个整数，数与数之间以一个空格分开。</p>
<h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>输出一行，包含一个整数，即最大的整数。</p>
<hr>
<p>直接用<code>max()</code>函數</p>
<blockquote>
<p>重點:max()</p>
</blockquote>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a,b,c=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(a,b,c))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>openjudge</tag>
        <tag>helping</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown用法</title>
    <url>/2022/12/04/%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="使用Markdown不是梦"><a href="#使用Markdown不是梦" class="headerlink" title="使用Markdown不是梦"></a>使用Markdown不是梦</h1><span id="more"></span>

<p>&#x3D;&#x3D;（1）标题&#x3D;&#x3D;</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>&#x3D;&#x3D;（2）字体&#x3D;&#x3D;<br><strong>加粗</strong><br><em>斜体</em><br><em><strong>斜体加粗</strong></em><br><del>删除线</del><br>&#x3D;&#x3D;高亮&#x3D;&#x3D;<br>我是^上标^<br>我是<del>下标</del><br>&#x3D;&#x3D;（3）列表&#x3D;&#x3D;</p>
<ul>
<li>一二三四五<ul>
<li>上山打老虎<ul>
<li>老虎没打到<ul>
<li>打到小松鼠</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<ol>
<li><p>一二三四五</p>
</li>
<li><p>上山打老虎</p>
</li>
<li><p>老虎没打到</p>
</li>
<li><p>打到小松鼠<br> &#x3D;&#x3D;（4）表格&#x3D;&#x3D;</p>
</li>
</ol>
<table>
<thead>
<tr>
<th align="left">Mon</th>
<th>TUE</th>
<th>WED</th>
<th>THU</th>
<th>FRI</th>
</tr>
</thead>
<tbody><tr>
<td align="left">上山</td>
<td>上山</td>
<td>上山</td>
<td>上山</td>
<td>上山</td>
</tr>
<tr>
<td align="left">打老虎</td>
<td>打老虎</td>
<td>打老虎</td>
<td>打老虎</td>
<td>打老虎</td>
</tr>
<tr>
<td align="left">&#x3D;&#x3D;（5）引用&#x3D;&#x3D;</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>一二三四五</p>
<blockquote>
<p>上山打老虎</p>
<blockquote>
<p>老虎没打到</p>
<blockquote>
<p>打到小松鼠<br>&#x3D;&#x3D;（6）分割线&#x3D;&#x3D;</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<hr>
<p>&#x3D;&#x3D;（7）代码&#x3D;&#x3D;<br><code>我是代码</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我是代码框(test)</span><br></pre></td></tr></table></figure>

<p>&#x3D;&#x3D;(8) 超链接&#x3D;&#x3D;<br><a href="">教程</a><br><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1e6dc7e7cae0402ea765142ab92f2c8a~tplv-k3u1fbpfcp-zoom-crop-mark:3024:3024:3024:1702.awebp" alt="网图"></p>
]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>helping</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-6-10</title>
    <url>/2024/06/10/2024-6-10/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="1be671dbc693401e150d5561a13b80396dedfb7bdda50f2c574cfa2a34f549f6">dcbb9f7aad60423f5649a1885dea9738b6623efefcad9087c808ec58681cab798e0b21255d41d4553903f5833cf2eada055f3cd1e0d7734173b619fb2b85a26e26b4197d22e36d20fa7e524762063153f813d4a4d760de9656d0ccc0d66305d14d03110f4b2e754f1dee071e70272f801ed18ab620cde07076843ac306b95a9b4bed8c1637d576de335c628a8f48da5c07fcdf85b2b67aa73d34f49dee08bcc3d999dadd62f1f138a375be44cddaae38d8106beeee5929d0a02ccbfe181a3318fb5826793f9307523759fd60edcf73aa7deea5dc36433662331a11f3d5431358738e0fa1b5bae4f14cd9eec933ff3f0690badeb5917ed9087604ea80fdd3dddd3b9157cf1b50bb2f4b808f09ea11f22cc3ed7fe4560b07e2c613f89fd446ac12337159317a1504cf6ca2ed89692ac8bb782f6b32c0fded86dac2df745fe00a63f999ea21811bd61f904af323fc36a64f621f65c347b9f4d6015a5ec81f5c28b13c2b2b30080f3a4cd157e98a4e9525256759d8ce44c592a64c5633d3acc6c12c835865aa75b2666d7b18c98e055b8c4170ec166a8b361c5139b3dbe2645b0a0e18246704ed1ea218c6a8a4976f765279fa3c35518fc3e59bb3a3235ffe257009</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-6-9</title>
    <url>/2024/06/10/2024_6_9/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="99f031911a8b3070ce5fcee4153f6429e1355a8491c9436aa644fe4a5ec2c84f">dcbb9f7aad60423f5649a1885dea9738ddcc88567ecbe3226096990f20deeff17b5eb30dc8cc49780bd8dd4be05d46b818e9922c32f234dd14f24438074ab711a5e052a899cca8c6a434545048f542ae6730b137e28a1d38ad6d0e4440fe95d7bbed9beb679507cfcd9f6272bd367136790ffcb18e6ea0ee00361a5d709b1c986339de345562717300658e0fa78b28cec1f5251925b7a7f10a3f80b481da864d734d63b65a5aa80caa080719ba23074cbc8d88295aaefd1e0c309dbbafc9f6f0da60182e0142fee560f25dd674b83201f8b7625bd399c2e2f6df01b689a12631d02f96f240fe2e66dac3dfa6f2de17b45431d3e902dc20626f5c2e03e725a7e43932c2b91cb542c4851f036e232c486becb5ecd1a3adacaf8920bca5aba48eb47f2461f8049c1688a613714fcb366a875ef2667216982227a9fb9587fc7f09adf5a700fca2cfba3f5a2faa93bde35530fba8206e07de193ff65ac8f098c1962f260c662b51fee3c3a563801791b3249fc274a8141f5c9b05d2ffe0fcd83766b597d0cf3928d6ff3fa21a087ce834cd178044df7a8a76c9917c5a9a448f3d382b01aba10e769abbee9a8bd9f6b652a535ab43202805a97c46fd4a28129ec20c5e6dc5ee056a7a63313b979d8e064369cfa703dbffa99c10c76eb38b080496c8a3cc3bada7f93fd3b4a3ef2e21f1a1cf92f7294441bd8e9405ed43ca5a69af23800c2e3417b0f992a253fe4b88b7078b7349d5a5b80daacff5147a59ee5be2ae7797c6d3e547783290451f7455c74137aa</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>Build_paddleocr_environment</title>
    <url>/2024/10/13/Build_paddleocr_environment/</url>
    <content><![CDATA[<p>whenever I want to build a new environment on python, it must disturb me a long time. Just now, I want to learn OCR suddenly, because I want to write a code which can automatically do the MCQ on website. I ever watch the course at bilibili, but it is not entire. I consider I need to learn how to read the official document and use the product. </p>
<p><a href="https://paddlepaddle.github.io/PaddleOCR/latest/ppocr/overview.html">paddleocr</a>, I find that I can’t casual install or uninstall anything, like numpy, when I copy the code in terminal, it maybe install the suitable numpy automatically. If I reinstall it, it will get wrong.</p>
<blockquote>
<p>If you have something wrong, maybe rebuild the environment is the best method.</p>
</blockquote>
]]></content>
      <categories>
        <category>experience</category>
      </categories>
      <tags>
        <tag>helping</tag>
        <tag>conda</tag>
      </tags>
  </entry>
  <entry>
    <title>The distinction between adding if and not adding if in a sentence</title>
    <url>/2024/09/10/The-distinction-between-adding-if-and-not-adding-if-in-a-sentence/</url>
    <content><![CDATA[<p>I found a sentence “how about if you watch this movie with me?” in Duolingo. I’m curious why it would insert ‘if’ in the sentence above. Then, I asked GPT.</p>
<blockquote>
<p>“how about if you watch this movie with me?” why the above sentence need to add ‘if’</p>
</blockquote>
<blockquote>
<p>The word “if” in the sentence “How about if you watch this movie with me?” is used to propose a hypothetical situation or suggestion. It introduces the idea that “watching the movie” is something the other person might choose to do. Without “if,” the sentence would sound more like a direct invitation rather than a suggestion for consideration.</p>
</blockquote>
<p>Here’s a breakdown:</p>
<blockquote>
<ul>
<li><strong>With “if”</strong>: “How about if you watch this movie with me?” This implies you’re offering the idea of watching the movie together, but you’re framing it as a possibility, leaving room for the other person to think about it.</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>Without “if”</strong>: “How about you watch this movie with me?” This comes across as more of a direct suggestion or invitation, where the choice seems less hypothetical and more like an expectation.</li>
</ul>
</blockquote>
<p><strong>The “if” softens the suggestion, making it feel more open-ended and polite.</strong></p>
<p>So, I learned it.</p>
]]></content>
      <categories>
        <category>experience</category>
      </categories>
      <tags>
        <tag>english</tag>
        <tag>conversation</tag>
      </tags>
  </entry>
  <entry>
    <title>The first interview practice</title>
    <url>/2024/10/16/The-first-interview-practice/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="ff55bdc9cc4c973864421b26f51f3d1dcf1a3baf73a87d92b017e6aad621aada">dcbb9f7aad60423f5649a1885dea9738af9b5fd38c7230691e5f9932cf8225e09e5da7a0f40a4a662b5caa11d5505b6eccf206d866de96ad78ee92a004881a2926db81b912e35d69939f72aca85236862b01398e695cd882331a539831289d125c3da4cbf290e7426290f1ee9506cd0621e7a0f4ba6cfb260bdf6fd7a12080f834c5531db303ffc86a0a15add7244ccd82fabf15455fb2890331042c96cb1f21509355ca8b0367c80d944fff8fe8abb5a4fdacdc1249b7cad8010ad97e434d917ecd3a313f5666d1168425205c57acf31b9277bd5ab8cdac7a6e691dc2453e93446f6cb8145e4cbf6975ba242fd52fa9f144bcdeeeaec510a1302ee5fc2043a1533ff9d078af3ec4f43a689d8dded80675963ec509623601be5d8f5df482765be670fabd2229ad02e31c53a50c83d1d476f88eae04590158e3456de5432cacd6993b803d704570cded28d17ef2e0abee1eeddebb433734a9ef59bcc175b21fb797724ba5589915816fc1081a20a0614d6ce0e960de403303712aec2230b7b3eeef7b40093e480eea2cd192501cec77d916eff0a09a474f5cf2b42792b145366abdd93b49223df2e0cfb3dd1731a05cc8ae7ea174e423b36a1f4c22bf44591650b831fc09a235b8afb4315c68aa5f56c80852da9236423dcac52303ddd3e8bc04493b371bd8f2ffff502ac22f80885b9b6fdc908ed653b0cf00cac287ac7ee369feca2ffb1a6ed961ba2dfebf245722256bed22c5b44e03e18b932e2b59e87e51b96952aa8f3e7c6454f73dcb5c9a6769ce437d3a0c0723dbab12bc0224247fe12599a19c3962fb283e2fb532f91ea15a3a8adb2f258ea66e08608ca931fdd132734f8c56e8fbb1ba9975f91d9bb8028558c0dc76500c632827baf0cc73e0e3be259be0320cf95382fb6c9dd4673979c3846b2d8ab5ee4911952f7ececb463ccd</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
        <tag>reflection</tag>
      </tags>
  </entry>
  <entry>
    <title>just array can use forEach</title>
    <url>/2024/07/18/just-array-can-use-forEach/</url>
    <content><![CDATA[<p>document is belong to HTMLElement.</p>
<p>arr is HTMLCollection, it can’t use <code>forEach</code>.</p>
<p>…Array is mean it can undress Array’s clothes</p>
<p>I have researched this code for one night. And finds above concepts, because my basic of javascript is poor. Just only roughly watch once.</p>
<p>I trying use allElements[0].innerText but I find it didn’t have pop a tip is innerText after allElements[0] so I reckon it didn’t have innerText API. But I wrong, just vscode doesn’t show it. allElements[0].inner is correct. Because allElements[0] and aa[0] is the same object.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;h1&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="keyword">const</span> arr2 = [...<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;h1&quot;</span>)];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr2);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> arr, <span class="keyword">typeof</span> arr2);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">0</span>], arr2[<span class="number">0</span>]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> arr[<span class="number">0</span>], <span class="keyword">typeof</span> arr2[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getAllSpan</span>(<span class="params">tagName</span>)&#123;</span><br><span class="line">    <span class="comment">// const allElements = [...document.getElementsByTagName(tagName)];</span></span><br><span class="line">    <span class="keyword">const</span> allElements = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(tagName);</span><br><span class="line">    <span class="comment">// const aa = Array.from(allElements);</span></span><br><span class="line">    <span class="keyword">const</span> aa = [...allElements];</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(allElements, aa)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(allElements[<span class="number">0</span>], aa[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">// aa.forEach(item=&gt;&#123;</span></span><br><span class="line">        <span class="comment">//     item.innerText = count</span></span><br><span class="line">        <span class="comment">//     console.log(typeof item, item);</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; allElements.<span class="property">length</span>; i++)&#123;</span><br><span class="line">            allElements.<span class="title function_">item</span>(i).<span class="property">innerText</span> = count;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> allElements[i], allElements[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getAllSpan</span>(<span class="string">&#x27;span&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>discover</category>
      </categories>
      <tags>
        <tag>helping</tag>
        <tag>javascript</tag>
        <tag>website</tag>
      </tags>
  </entry>
  <entry>
    <title>National holiday</title>
    <url>/2024/10/02/National%20holiday/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="b3a1ac038f1374fb3bc32249d60a77fc30c603e20e7481d6ff52d4e4913a8a3a">dcbb9f7aad60423f5649a1885dea9738bd2a220c96d161a7b1b071e33d307f5cf13c3c894d9c4f55187bf9a93eeb843af7df1602e5c4a4a10b88f91a9ae75806dcf56b0a3bbe216a760cec44ad27df5d8472a06851216915aa99ff9849ca14ff639ee41bde73bf98b82decf0fbf86e795b94304f5d37720dc61b6a3704f37ae9d229970f9cb37f5457cd84d8d062864289c25e118420076a2383bcc16669d964da6c31b30875efc5d6598737cb81ff8b25f4fdf57df694be36d134ee081023d15a94732ac82ce3d1376f9e1a62813320cf7d9e805674bfd86b5986875cc920305590113322fd1013b55dd3c759daccd78ad0bcd8a8c3aa18c85c303152db24da9cee39e29014587ec37f88e45820c452e23c669c93d846debc2219562c80f8c5fc54d9383b86cb5ba0bd5cb240b35f35c7a460f562c220fee751042f99894e027136915a560040bbe93bf75a3277a60ebba2d090e1794f75ee52653c6da62dd104b1ab45a3c5c68a2ccf7d8ecb04b5e8f61b4e55931231af887451cac76ebf01513c76f9f1b106f096b06dd5acde8fd9f8ec73d67dc1ac5c563bd9b402ea5cdf7a661c55284962a3a6cc96e1891227df6a7bcb32ed8cb4d8202dc0c9accd99297038d63b9a6810f8c4ad607246c1f7b0b033ffcc74e86ac1ad19186b1855114f75659507386faee73f7d4789691c40d585514ec28c6ebba3f59c2b1bab00c64053fe807c424f23a6857679dbcb1e164493c267f17c4a8c33bf1fecc99c5930b5acc1d9349f07435b127317e6da932463b6c35bff6f77ee8e7e15a2da4b0c613ad0e604206ae549cadce6d8aa35918c8d64633fc846b033e84b68262c234100ff807865f79461534d331f62c26ec7339544572c7b08197a45f90dc88254764b7b06f3708d70dada4060536c7b51f7c424504f5221fc8e090b28573271f8485adff6e4744a39b1dccf0f3eadf7708322cdbf7455a7a300d70e2104b6c8ec70663d859898e5a40a571be19d201115228b821a58ae473acf3a883c9e9636fa846410bf37985dc298bf3a1bfa801c7b748bdf45a42093b430ccc75340a5b0ad7070dc1047005f11bdcbb8e4fef1fb295bca02d32b1235824556d5fa77032ccd2e03e7ef7c44fee1f4ce95d25425a4ef628d9a2166612127ed83386931a576d8d62e655fcb363afee34877fbe4c5268104b16ca96278f7b6208e02842ce513742c21c09994d90df46ea269b16ff7ea0769a389281ae302f700f95af5c6c523ac668aaf3dbfcec95b32d49346a8c4f2fbaefbac63a6f62e5c974b3adcff9442264c140111765bcbe4c15a69a438cf01af46ff6b7f401e01c79fb030ed84ace6dfe68743ba153138f85834e7f9f0502b1db554559c71db996f2772f1a68f6be6b04049efba796243fb7c883c0190d3b7deb1cd1f00a1a4c728054e7aa44a7badc7d54ea78e95739e211b8d3db986b8b072fdc7c2fb2a69edea1899e1b0895cb45f867cba4955d54412bea97c038a5e5c9dde5420</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>-feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>my travel</title>
    <url>/2024/08/10/my-travel/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="0f90ef063696255cd9b9560c004dbed9c9577f590fa03ab07c77443832742332">dcbb9f7aad60423f5649a1885dea9738e42a0070fcb64b158da7da581c0f0e10a9c8822daca8be53bf3729a68cbb2eb3c81c3c85e427e5b417d4721ebe72ae5a73e06fbf7eb77e06176c8ddf1f5c8123689728ad4a8ed2e28d6ad05a784b201b3107827ec020fd63c40434a581fca328a701ba337a85e46dd8b29779e2ff6dca9a431c8bfde30207b89b5321f4fcf0d0bb82c920b31fdd3117d6c1a8879664d3334a57720aebf7d88031742660273aa10ec00dc75c7dd2b1d24387063db03b9670ad1799c1f47ae2deb3342f58c21ed9d2dec12aa31553c5743fd3722ab692782cd3e4fc8eba467dd3a2dd55f10ea1283a05acbe1c46fab9b3ec03c4d93808faa0fc251e33b1f05065aa37becd4036d5580b7d54b81cc9ae983f1d8dfc9df8e0a005eec9c9dd073bb6daad6e0af665f0970a6f3caf12915c172fd7de60b198eb1ffa68d667126b1f1f9cf18e65b7b01d8c79604057a51f438ab4c83cb1e4656a0eddc646b49758b88c92e3eb7c6862999aec9723991ee7f5a3b3cfe1ac12d05ed741bad080b185c9880fdf9064c98c1d58f8f406416aedc2604f1fc745e6a68b1452c668c5f081cd7dac193cdf3354482541db46c15b0e42f5335eddda335179196858b566948415f304a2aafa21dc5ecc7cd50cce2a2fb24a870e2814b76e9bcf043d1215476622594c43e05dfd518932af0a7d85971c1f8225b7e4ce528c14056caeb79d85f44e31241c58f43da4f700839eeffc9433c5806046d1e02a05ea1b88b754144ef22b8c949831004f6c82</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>-feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>my_thinking_2024-08-19</title>
    <url>/2024/06/06/my_think/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="就唔俾你睇。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="972e1c406015d20f21e7836c20d4a236a9f2549b7314b5d5449887f31286f06b">dcbb9f7aad60423f5649a1885dea9738b651bd25b3540c3453ccd385092a06d58f4464a24ca8c5f5e56380c9114d7d0b9ae76606edc51b585f802b4be07f6600c2f7a6eff4cdb4b1052a7e58bfefd3c19d99e3d817e30c27e33364e9fe5075b913bd3b9daa346fe8ae3652e6f334c67a8ee982cd4ec281101639b2d06b9b08141016e10fc4d7211f0c4474c438b75726d4a98ec42a487d8033c97e2143a250bf3fafc71965c3e08385f0758cd8bd605de9954013f0bccad0d911c36007c2987b32b2ce3400cadd756c05c5445c0ce13e809481a35397ea70d1ecd6b16b446b88a41f3ef0a4134f2e6430debb2d3bc31866c3910bf806e083ddfc360b2343386d8e71e736cce06d8e1783503bfa17893cd3c1642412540bf1017a12e3b32e4fa938066a6be25cd8e731ec5569d436db14a3f306f0aaee507eb40bf0c4d3ba3aaae7a3af6bdecc53a6f6412887e52cfe0074c3310e95b53023fd866b924ddaf0a09086a8894cfe092fff895f227648744450683eac389206adbd7c7ac8ab6677f1626d8a1feef4a9fc610b232349a826903575229dbbed29448e406b40e7d1128a50ad67384ead1d63d2960694c54e7b72f209fb1f00e32968681ee6f24a955dca3f041821025f85fd4cf857c33d8f6a49addba5e5c3bf92a9310e29957ba47b77f27c3ae036793f20d7865305f17746fd4f936fcfb375cb1e4957458cf9076de666f3e00a296c66a0b1b2cbfe4ac0a779ef4ae34c6916545b43969f26fd71b2b9ab6d58692bc0a6f5f0e21cfcd4d36a43d5124a0d34beb25c468524915c4b8375654b534949cf990921129d9046c16accd3a2e305502f68687166747d1baa6135a3ca94f5e964a184695b30fffc0b0200811224622e93ea9d978d69d3af638161ba5aac8bb629bd0ec857d88259b4341b1aecaf920a08aaa33111a31b5cc76bf3655973abdbf45802de505068437ce5d46a20702bbbd3a303621af9c97958c3bf5b1a105ef2da5c770ce8df1f8c3a1ae3ca95d0b662504561aa5eef27a849dcd61729c3d5cab1e9450ab4969a2cc15b4de59f3fe28529e5ab0e563082a207bacfb14864939320c00100a9b229271cab07e7a7bf27186e06e57a1573d348f29f06c8b2167bd9164121bd9fcb8f4f43da86a5cc75479e48172187e183330db52b61d2cdaf8e995800ac3f0fd527fb156510c17d719468e89875b0556edaafb1345678c3065214c4868f62a48c694bf73d37b225aea93fe17f805c8638eb9ce67f6336ed36f4be47bb8c32fe2f4bc8446e435d9026e81eb5327977ac39bf51df5ecdc1a9ef066f4358f598927306d07612276d11c6247b71412972be6aab584b9e76293896311ad619fca9d896cd4eecfb7d79103100e34fd2178b34527114f470ba55fcdef37601488f378506fb6ea6d536560371adc42cbf1c26d6875defa4c17246b6b6661c1ae42f69cbcb45fd298b2a8dfb69b7512b4b436da94f356a1cff9c8c09e9432dd757a9abead9179c882c0552f054082add6ae742b2bf025c916880996eef6fbf3137781aee05197bb9211342ef42cc713e43da8a9193803c2f2013aca6d100178b5fb8174f6240acbf47db5f2a8aef85f92d7bf016b72adf8c22fc38460316fe74ffc9e019efe365d05cb00bf6c09edc57e697694df184102f7a7f216fbe11048ec80fcbb41262f79b75906d6fbedb5c3bbbfaa4577ba0e63ed53ce79fd6fe4d77b7fa2efa09b8b9f879d585bdbd2921390319933b413e0ae205e4b09464415b2ca3fe009f46d918bbf71023f31948b6dd2e9df724b574eb9cf2f3c6a2707e1c2d0e4595e021f48f5253e777362d223ffd432d59df15589a9febfacb1a5d5b8213e0fcc7257f0fecfc97e4e1bc276ccaabe6b58485825a04a0a820ef93a18083775688040f05286b7dbedc85eef7687c7da7e99b62fc65b0865cc9818af04a93988718043e35eca16803cd2f7470140c5ce2866de0d11eb801e263aaff8ca8ced10255ab2519a1fb0f2083e38dfc85d5baf2dc8c3257c9d6ac9e62ba869658d5c1a3451acf5d3e63565443b70ecb965396b9fe57debf9fe058d47db830d858193546b844b34fe8450d39c5b6c33b23e8b11f55254cf40697d0b33738687317aedde9f8bf322b3eebff928f96a3b8515ce1a6382ed85658beb24c1ba3c2823a5dcff774748cc9751956c7ef8fefc806f95c15fff4a944b10ba9db7361dfe5af46a10b24f5f7ed7f22b82f0c6a9fc1bd2b3db5ca9cb8e7f9453d1ac807905f7b6cb52e86b4f06cc46afcb1ed1e563697706593e384d111786bf9e821212e53e8c82744dd2e1a12c7a1d095e29b2f5719f8ebbd9902c000be66be2bba9e7251044bc303dfaadb2a45b4598009aff0bf12144abfd27983ac3357de4be315249152e8d466cfc87f504eb45d7c41d1fabe9588eea26bf766ab3173896f36d7e4bbcbb078275f96f4bc724ac17e952000443ca4d03d6d50d856c74161c18245b84eecef31c4798463bba6fbd49cc33e8be6d4e724b91bb3ebec8bde908bb6902a9a646d9475921b565446cc0288d6fb206ceb08347993cd1678c3fd49935328966c0fa1b01cce193f8025b9bec1be8c38b9a69c42206f22fcf525431ab970dd8fa8a1b9f5ee304b8296ad43632825af40e7f5fd7bf451bede25c4f76d9c38cc3441e42276baca36263a31bb1f974cd40d9f7df2b008eaba457fa398aae159ed3346fa9693044186e701684f1e56adc8d44a755b8e629da26700ca928441f7902ec0134f34c3f1e1222368315fc4d7492d1aceef885703302d3b2354623a57edb9fa76cd13956dff2e3c5881f5cdf3b8ca6b2e9b5e302f02d605dbf63f9d306307e83f610bb6d20e7888ed5fda5bf919d1d2e4ed33bd8a0c2f14a39ee6d5fe2c20276fe0ac0300110c943e609d1c207c91b2349cc262dfd5b72155af3bf3384b0c658a0f52e66494f4b27ca4085d650ed8c2c165b8521ddfb392a20720dd9a0eeacef6296456a7acef324c7c16c10bc29aa1d12ded740d7a5d1b1c86b0c269370ef46a0512d65d5c725fd2596385525df9090bfc558036082fb247f3d3917ad840e91cb255667946620451e8d82b08fbc78cb8907877fedb0863e50d90e914c335d54261714100b5e517f25b93f8ed403a6ca585fcc02811755c8f4dcdb9b75fab3b9351661365883e5628fa83a13786317ecd1ea1b64ce28d92ea796444affacfa62bd609c09d054fd8366ff9ed398122b98a8715c6c719fa7c0a591c54fcbffc923ececd7d28acd74739decc30cfed46a68ec3c26d82cf14d3856a1831f2e87d4cb8544f6627e8cf053ce64ba7e6dcb50039277a4de0709ae850d207c0b2d0fd0b371b5d51aa322593f01715c4fb981dbcfb20b254059294474207c04bb8c411a599ec3cd56ee84d387d0c3c53bf934accc34c95dbc41eb9552cf8f3cf70603c7f17d9b58dc830c8e84fff1fc7594cd4e0e0eb756339ddb55e64400a9049</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>nonsense</category>
      </categories>
      <tags>
        <tag>feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>the confuse from console.log</title>
    <url>/2024/07/21/the-confuse-from-console.log/</url>
    <content><![CDATA[<p>When I learn javascript and I wrote the dialogue</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div)</span><br><span class="line"><span class="keyword">const</span> text = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">div.<span class="title function_">appendChild</span>(text)</span><br></pre></td></tr></table></figure>
<p>I find the browser output the second statue so I am curious why it happen.<br>Then, I asked GPT and it tell me</p>
<hr>
<p>The console may show a live reference to the object, not a snapshot of its state at the time console.log was called.</p>
<hr>
<p>After that, I understood the reason. But I wonder if I want to show the status at that time, what should I do. Then, he give me a answer</p>
<hr>
<p>If you want to capture the exact state of the div at the time of logging, you can log its outerHTML:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Before appending text node:&quot;</span>, div.<span class="property">outerHTML</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> text = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">div.<span class="title function_">appendChild</span>(text);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;After appending text node:&quot;</span>, div.<span class="property">outerHTML</span>);</span><br></pre></td></tr></table></figure>
<p>This way, you’ll see:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Before</span> appending text <span class="attr">node</span>: <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="title class_">After</span> appending text <span class="attr">node</span>: <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>This approach ensures that you log a snapshot of the div’s state at each point in time.</p>
<hr>
<p>So, if I want to show the static status I need to use outerHTML.</p>
]]></content>
      <categories>
        <category>discover</category>
      </categories>
      <tags>
        <tag>helping</tag>
        <tag>javascript</tag>
        <tag>website</tag>
      </tags>
  </entry>
  <entry>
    <title>encourtered some problems in my english writing homework</title>
    <url>/2024/10/28/encourtered-some-problems-in-my-english-writing-homework/</url>
    <content><![CDATA[<p>I try to use GPT to assist me to doing homework. It is really helpful and explain clearly, answering some deep and specific question.</p>
<p>me: </p>
<p>​	here is a topic”Working <strong>from</strong> home or working <strong>in</strong> the office:which is better?” I want to ask why this sentence use working form home instead of working in home or at home</p>
<p>GPT: </p>
<ul>
<li>“From” implies origin or source, which makes sense here because it suggests that work is being done starting from a home location.</li>
<li>“In home” is not correct because “home” doesn’t function as a place you can be “inside” in this context.</li>
<li>“At home” could make sense in casual settings to mean you’re doing something at your residence, but in the phrase “working from home,” the focus is on the origin of the work, not the specific physical location.</li>
</ul>
<blockquote>
<p>in office. emphasizes being physically inside a specific place</p>
</blockquote>
<blockquote>
<p>from home. suggests that home is the starting point or base for<br>your work, without necessarily emphasizing a specific location within the home.</p>
</blockquote>
<p>not only we can ask GPT explain, but also can let GPT revise your sentence like correct your grammar.</p>
<p>which can interpret detailedly why you get wrong .</p>
]]></content>
      <categories>
        <category>experience</category>
      </categories>
      <tags>
        <tag>homework</tag>
        <tag>problem</tag>
      </tags>
  </entry>
  <entry>
    <title>HTMLDocument.style detail</title>
    <url>/2024/12/23/HTMLDocument.style_detail/</url>
    <content><![CDATA[<p>HTMLDocument.style is point to DOM</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.d</span>&#123;</span></span><br><span class="line"><span class="language-css">	<span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;d&quot;</span>&gt;</span>DOM<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.d&#x27;</span>).<span class="property">style</span>.<span class="property">color</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 空</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.d</span>&#123;</span></span><br><span class="line"><span class="language-css">	<span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;d&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: green;&quot;</span>&gt;</span>DOM<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.d&#x27;</span>).<span class="property">style</span>.<span class="property">color</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// green</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>So it mean HTMLDocument.style just refer html label. Even though you have written the color in css file but not written in html label, it just print ‘’ in terminal.</p>
]]></content>
      <categories>
        <category>discover</category>
      </categories>
      <tags>
        <tag>helping</tag>
        <tag>javascript</tag>
        <tag>website</tag>
      </tags>
  </entry>
  <entry>
    <title>References between js</title>
    <url>/2024/12/23/References_between_js/</url>
    <content><![CDATA[<p>If module is referenced by index.html, all js below that module can use the function without referenced module, even needn’t import and module.js needn’t export.</p>
<p>If module.js doesn’t be referenced by index.html, other js can only import module.js function and which also need to export.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">// index.html</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./moduleC.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./main.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;main1&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> &#123;a&#125; <span class="keyword">from</span> <span class="string">&#x27;./moduleA.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;moduleB&#125; <span class="keyword">from</span> <span class="string">&#x27;./moduleB.js&#x27;</span></span><br><span class="line"><span class="title function_">a</span>()</span><br><span class="line"><span class="title function_">moduleB</span>()</span><br><span class="line"><span class="title function_">moduleC</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;main2&#x27;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// moduleA.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; moduleB &#125; <span class="keyword">from</span> <span class="string">&#x27;./moduleB.js&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">var</span> a = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">moduleB</span>()</span><br><span class="line">    <span class="title function_">moduleC</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;aaa&#x27;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// moduleB.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> moduleB = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;moduleB&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;bbb&#x27;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// moduleC.js</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">moduleC</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;moduleC&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ccc&#x27;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// output</span><br><span class="line">ccc</span><br><span class="line">bbb</span><br><span class="line">aaa</span><br><span class="line">moduleB</span><br><span class="line">moduleC</span><br><span class="line">moduleB</span><br><span class="line">moduleC</span><br></pre></td></tr></table></figure>

<p>Because moduleC.js is upper than main.js, so <code>ccc</code> first. And I guess all code should waiting the module loaded then run. First, import moduleA in faster than moduleB in main.js, and moduleB is referenced by moduleA. So it will output <code>bbb</code> first, then <code>aaa</code>. And moduleB.js has been referenced, so it wouldn’t occur again even main.js refer it.</p>
]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>helping</tag>
        <tag>javascript</tag>
        <tag>website</tag>
      </tags>
  </entry>
  <entry>
    <title>delate function js</title>
    <url>/2024/11/02/delate-function-js/</url>
    <content><![CDATA[<p>I make a adjust seat website, which increase my understanding of javascript.</p>
<p>I learned how to delate the loop</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">delay</span>(<span class="params">ms</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, ms));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">delayedLoop</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">delay</span>(<span class="number">1000</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">delayedLoop</span>();</span><br></pre></td></tr></table></figure>

<p>and </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">    &#125;, i * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Once, I make a sleep function, but I forget to return the Promise data.</p>
<p>Which let me impress. And I find that no need to change <code>async</code>function.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sleep</span>(<span class="params">ms</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, ms));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Because it is no use to add async to sleep function, only add async to your operative function, adding <code>await sleep(delate)</code> just take effect. Otherwise, your operative wouldn’t wait the sleep function, running next code directly.</p>
]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>helping</tag>
        <tag>javascript</tag>
        <tag>website</tag>
      </tags>
  </entry>
  <entry>
    <title>set percentage in css</title>
    <url>/2024/11/09/set_percentage_in_css/</url>
    <content><![CDATA[<p>If you want to set a percentage width or height, you must sure the parent nood have set a fix width or height, min-width and min-height are not the kind of fix. normally, you can set a min-width and width to make a responsive website. This approach like flex-grow flex-shrink flex-base, flex-grow can automatically adjust, flex-base is set a base size.</p>
<p><code>flex-basis</code> is a CSS property used in a flex container to define the initial size of a flex item before any extra space is distributed based on <code>flex-grow</code> or <code>flex-shrink</code> properties. Think of <code>flex-basis</code> as a starting point for the width (in a row layout) or height (in a column layout) of the flex item.</p>
<blockquote>
<p>GPT said</p>
</blockquote>
<p>Your <code>color-bar</code> div isn’t taking up the full 60% height as expected due to a few potential issues. Here’s how to troubleshoot and fix this:</p>
<ol>
<li><p><strong><code>section-one</code> height constraints</strong>: Since <code>section-one</code> is defined to have a minimum height (<code>min-height: 90vh</code>), the <code>color-bar</code> div’s height of 60% is relative to the <code>.section-one</code> container, which can make the layout behave unexpectedly based on screen height.</p>
</li>
<li><p><strong>Parent container height</strong>: Because <code>.section-one</code> only has a <code>min-height</code>, its height can change if the content inside it grows, making <code>color-bar</code>‘s height unpredictable.</p>
</li>
<li><p><strong>Testing with <code>height</code> directly</strong>: To see the desired effect of <code>color-bar</code> taking up 60% of the viewport height, try setting its height explicitly as <code>height: 60vh;</code> (viewport height). Alternatively, ensure <code>.section-one</code> has a fixed height rather than just <code>min-height</code>.</p>
</li>
</ol>
<p>Here’s the modified code with <code>60vh</code> applied to <code>color-bar</code>:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;color-bar&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 60vh;&quot;</span>&gt;</span></span><br><span class="line">    hi</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Or set the height of <code>.section-one</code> to a fixed height, for example, <code>90vh</code>, to make the <code>60%</code> height work as intended:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.section-one</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">90vh</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>This should help you see the <code>color-bar</code> at the expected height. Let me know if this works for you!</p>
]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>GPT</tag>
        <tag>css</tag>
        <tag>website</tag>
      </tags>
  </entry>
  <entry>
    <title>default flex box</title>
    <url>/2024/12/24/the_maximum_box/</url>
    <content><![CDATA[<p>Flex would change the state of element. Width would be set to 100%.</p>
<p>Whatever the <code>flex-direction</code> is row or column.</p>
<p>I often meditate on that thing why the box would occupy the whole width without setting, even <code>span</code>.</p>
<p>content can beyond the border. And border also can beyond the screen.</p>
]]></content>
      <categories>
        <category>discover</category>
      </categories>
      <tags>
        <tag>helping</tag>
        <tag>css</tag>
        <tag>website</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>the process of my windows repairing</title>
    <url>/2025/01/04/the-process-of-my-windows-repairing/</url>
    <content><![CDATA[<p>Yesterday, I deleted my user account and change a new password. Therefore, I was under the confusion what password is it and the account was locked. I search a lot of method. Finally, I choose the PE tool but I don’t have windows PC, even my virtual windows can’t work. I had decided to go to school next day. I asked Jasper to help me open the computer room. I tell him what I was facing the problem then he give me a U storage which is PE tool(老毛桃). I also downloaded another PE tool(微PE), but it seem not ok. Eventually, I take the U storage Jasper gave me and get home. I appreciate him. If he no give me 老毛桃, I bet I will spend more time. </p>
<p>After I unlock the password, I log in a new account. Fortunately, C disk and D disk both are exist. But I am using the new account, the edwin folder in users. I want to use Edwin user folder be my main user faolder. And I almost cut the Edwin folder to my current user folder. I become smarter, I search the method which change my current user folder to edwin user folder. Finally, nothing are disappear. </p>
]]></content>
      <categories>
        <category>experience</category>
      </categories>
      <tags>
        <tag>feeling</tag>
        <tag>reflection</tag>
        <tag>problem</tag>
        <tag>system</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>back up system at regular intervals</title>
    <url>/2025/01/08/back-up-system-at-regular-intervals/</url>
    <content><![CDATA[<p>don’t install application causally. I downloaded <code>docker</code> and deleted it before long, then restarted. Unexpectedly, my user folder(edwin) was eaten. I call help, my teacher tell my that I gave docker a power authority, so it will do something unexpected thing. Docker can only install in virtual environment or sever which don’t have important file.</p>
<p>Coincidentally, my windows was running a sever. Finally, I decided to reinstall my system. And I was reflecting the whole accident why it would happen. And the answer is <strong>back up system</strong> at regular intervals.</p>
]]></content>
      <categories>
        <category>experience</category>
      </categories>
      <tags>
        <tag>reflection</tag>
        <tag>system</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>setting children box width</title>
    <url>/2025/01/18/setting_children_box_width/</url>
    <content><![CDATA[<p>If the father level set the property of flex, the children level box will has the default property like <code>flex: 0 1 0</code>, corresponding to the following property <code>flex-shrink: 0</code>, <code>flex-grow: 1</code>, <code>flex-basis: 0</code>. In that case, your width property is invalid. </p>
<p>If you want to set the fix width, setting children property to <code>flex: 0 0 YOUR_WIDTH</code>(the flex of the father level’s property must set to <code>flex-direction: row;</code>), but the property of width is also invalid.</p>
<p>Or setting children property to <code>flex: 0 0 auto</code>. Then the property of width is work.</p>
]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>helping</tag>
        <tag>css</tag>
        <tag>website</tag>
      </tags>
  </entry>
  <entry>
    <title>pay attention when using gsap scrollTrigger</title>
    <url>/2025/01/18/pay_attention_when_using_gsap_scrollTrigger/</url>
    <content><![CDATA[<p>I run into a problem during I use gsap scrollTrigger library. When I scroll the screen, the target element is work and horizontal scroll to right. But the thing is the following element is also scroll up during the target element is scrolling to right. I fall in to meditation. The following element is suppose to scroll up after the crosswise scroll is finish.</p>
<p>Over some hours, I find the reason. The father box of the target element is <code>flex</code> and set a <code>align-items</code> or <code>justify-content</code>. And the target element’s display cannot be <code>flex</code>. In sum up, both target’s father and target cannot be a <code>flex</code> box. After I erase these codes, the process is work.</p>
]]></content>
      <categories>
        <category>discover</category>
      </categories>
      <tags>
        <tag>problem</tag>
        <tag>javascript</tag>
        <tag>css</tag>
        <tag>website</tag>
      </tags>
  </entry>
  <entry>
    <title>some problem during setting MC server</title>
    <url>/2025/03/16/some_problem_during_setting_MC_server/</url>
    <content><![CDATA[<p>I want to set a Minecraft server. But it always run into error.</p>
<h1 id="First"><a href="#First" class="headerlink" title="First"></a><strong>First</strong></h1><p>Is the environmental problem. Every different mc version demand different JDK. The <code>.bat</code> file contain <strong>java</strong> need to change the address of corresponding java version.</p>
<h1 id="Second"><a href="#Second" class="headerlink" title="Second"></a><strong>Second</strong></h1><p>That start file is <code>.bat</code>, not <code>.jar</code>. Before I aware it, it spend me several hours. (If not exist <code>.bat</code>, you can creat a one and write down </p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">&quot;java address&quot; -Xmx8G -Xms500M -jar forge-.....jar </span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>

<p>)</p>
<h1 id="Third"><a href="#Third" class="headerlink" title="Third"></a><strong>Third</strong></h1><p>Click the <code>.bat</code> file and run into error, system will record the problem to txt. And I send to deepseek to search how to solve. Dramatically, deepseek find the correct reason is that my forge version is incorrect. But I don’t trust and border to change.</p>
]]></content>
      <categories>
        <category>experience</category>
      </categories>
      <tags>
        <tag>reflection</tag>
        <tag>problem</tag>
        <tag>java</tag>
        <tag>mc</tag>
        <tag>server</tag>
      </tags>
  </entry>
  <entry>
    <title>pytorch environment</title>
    <url>/2025/05/01/pytorch-environment/</url>
    <content><![CDATA[<p>building python environment are literally troublesome. It take me several hours. And I find that the best approach to build environment is to follow the offical document.<br>I downloaded pytorch and the bash code below.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda create -n ai_env python=3.8 cudatoolkit=11.8 cudnn=8.2 -c conda-forge</span><br><span class="line"></span><br><span class="line">pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118</span><br></pre></td></tr></table></figure>
<p> reference:</p>
<blockquote>
<p><a href="https://pytorch.org/get-started/locally/">pytorch download</a></p>
</blockquote>
<p>Maybe there are many clashing between these package. Different python version exist different <strong>libiom5md.dll</strong></p>
<p>a temporary way is adding code in running py</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.environ[<span class="string">&quot;KMP_DUPLICATE_LIB_OK&quot;</span>] = <span class="string">&quot;True&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tutorial</category>
      </categories>
      <tags>
        <tag>helping</tag>
        <tag>conda</tag>
        <tag>windows</tag>
        <tag>environment</tag>
      </tags>
  </entry>
</search>
